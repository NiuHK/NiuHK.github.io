{"posts":[{"title":"Windows 万能下载器 Aira2 懒人配置：","text":"Aria2 是一个命令行全功能下载器，同时支持磁力下载，没有原生界面但是可以使用aira2c以及airaNG的web界面 为什么选择 Aria2？ Aria2 下载功能比较全面，支持 BT 和磁力链接，性能也相当不错，速度不比迅雷慢。 虽然没有原生应用界面，配置也比较麻烦，但这些可以通过懒人包轻松解决。 最快速的懒人配置： 下载懒人包： LINK 将懒人包解压到 想要的文件夹，根据路径配置aria2.conf 官网下载 Aria2 程序LINK，然后解压到快速设置包的存放文件夹中，整体替代其中的 aria2相关程序和文件。 点击 Aria2c启动器.exeorAriaNg启动器.exe即可开始下载。两者都仅为前端界面，使用文件中的aria2.exe服务，可同时启动。包内均为开源绿色软件，不涉及任何隐私和安装，AutoHotkey 插件容易被误报。 Aria2c webui：https://aria2c.com/ AriaNg webui:file:///D:/Program/aria2/AriaNg/index.html#!/downloading 接管浏览器下载如果想用 Aria2 接管浏览器的下载管理，需安装插件/扩展。 Chrome：安装 添加到 aria2 扩展。下载包可以用 国内搬运地址，或是懒人包内置文件。如果浏览器无法直接安装 .crx 格式的扩展，可以将文件解压到新文件夹「xxx」，然后在浏览器的地址栏输入 chrome://extensions/ 开启开发者模式，点击加载已解压的扩展程序，选中刚才解压的文件夹「xxx」。 Firefox：安装 Aria2 Download Manager Integration 扩展，可参考下方的 Chrome 扩展设置进行配置。 安装完「添加到 aria2」扩展后，右键扩展图标，点击「选项」&gt;「设置」，设置如下： 最小监视：10 M，低于该容量将由浏览器下载。如果 Aria2 要接手所有下载，可以将最小监视设为 0.001。JSON-RPC 链接：http://localhost:6800/jsonrpc。注意：「添加到 aria2」图标显示的 en 表示处于开启状态，dis 表示处于关闭状态，点击图标可以切换使用状态。","link":"/2024/03/04/Aira2%20%E6%87%92%E4%BA%BA%E9%85%8D%E7%BD%AE/"},{"title":"Google服务异常耗电解决办法","text":"推荐root+gms doze.gms doze 卸载删不干净，还需要更改install.sh才能删除干净。gms doze 不工作则可能是系统或模块版本过低 原因：国内网状态下ping google服务器疯狂404并重试，导致占用率极大，手机温度达到温控阈值。 解决：1.gms doze（推荐）https://github.com/Magisk-Modules-Alt-Repo/GMSDoze 如果设备系统相同（lmi a13 pixel experience plus-2023-5-12），推荐使用，刷好后续航大幅度提升，配合scene的应用偏见功能完全可以将功耗发热降低至优于国内rom的水平 2.黑域动态gms: 有弹窗无法取消，并且root开机无法自启动，开发者给的答复是1.屏蔽弹窗消息不会支持。2.root不是主要支持，所以不会修。 3.universal gms doze：https://github.com/gloeyisk/universal-gms-doze 在我的设备（lmi a13 pixel experience plus-2023-5-12）不起作用 warning！模块由magisk刷入，所以能否卸载干净以及对设备的危害暂不知道！！！（底下的有人提出过相关issue，但是作者并未作答）","link":"/2023/06/30/Google%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8%E8%80%97%E7%94%B5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"},{"title":"Icarus主题的一些常用配置","text":"常见的一些配置见_config.icarus.yml，英文不差都能看懂，或者去看icarus文档。本文主要就是一些网上很少的配置。 Icarus: 4.0.0 本地和部署更新不同步删除public文件夹重新生成 文章页面两栏布局在 _config.icarus.yml目录下，创建 _config.post.yml文件，该文件内容与 _config.icarus.yml文件一样，用于单独加载post界面布局。注意，双栏需要将widgets内容的position都设置为同一边。 12345678910111213141516171819202122232425262728# 单独文章界面布局widgets: # 个人信息 - position: left type: profile author: zhaommmmomo author_title: fahaxiki! location: Yantai,China avatar: /img/logo.jpg avatar_rounded: false follow_link: 'https://zhaommmmomo.cn' social_links: Github: icon: fab fa-github url: 'https://github.com/zhaommmmomo' # 文章目录 - position: left type: toc # 目录序号 index: true# 侧边栏是否固定sidebar: left: sticky: false right: sticky: false 增加两栏布局下文章的宽度12345678910111213141516171819202122232425262728# layout/layout.jsxmodule.exports = class extends Component { render() { ...... &lt;Head site={site} config={config} helper={helper} page={page} /&gt; # &lt;body class={`is-${columnCount}-column`}&gt; 修改为下面一行 &lt;body class={`is-3-column`}&gt; ...... # 'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2 # 修改为下面一行 'is-8-tablet is-8-desktop is-9-widescreen': columnCount === 2, 'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3 })} dangerouslySetInnerHTML={{ __html: body }}&gt;&lt;/div&gt; ...... }};# layout/common/widgets.jsxfunction getColumnSizeClass(columnCount) { switch (columnCount) { case 2: # return 'is-4-tablet is-4-desktop is-4-widescreen'; # 修改为下面一行 return 'is-4-tablet is-4-desktop is-3-widescreen'; case 3: return 'is-4-tablet is-4-desktop is-3-widescreen'; }} 只固定目录123456# source/js/main.jsconst $toc = $('#toc');if ($toc.length &gt; 0) { $toc.addClass('column-left is-sticky'); # 添加 ......} 1234# include/style/widget.styl 添加下面#toc max-height: calc(100vh - 22px) overflow-y: scroll","link":"/2024/03/10/Icarus%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"},{"title":"LLM 学习笔记","text":"大型语言模型（llm）是一种特殊的预训练语言模型，通过调整模型大小、预训练语料库和计算来获得。由于llm规模大，对大量文本数据进行预训练，表现出特殊的能力，能够在许多自然语言处理任务中不经过任何特定任务训练的情况下取得显著的性能。llm的时代始于OpenAI的GPT-3模型，在ChatGPT和GPT4等模型的引入后，llm的流行程度呈指数级增长。LLM 表现出根据相对较少量的提示或输入做出预测的非凡能力。LLM 可用于生成式人工智能，以根据采用人类语言的输入提示生成内容。 基于transformer架构的LLM：自注意力机制，关注词和当前输入序列的所有词的关系，提高训练速度 文本token化每个被一个整数表示 传入嵌入层，每个token被一个向量表示（词向量），向量空间中可以表示更多相关性（多维度） 位置编码代表词位置的位置向量与词向量组合，使模型同时理解词的意义以及在句中的关系 编码器（多级串联-&gt;更深入了解）多头自注意力机制-&gt; 词之间相关性表示权重 有多头自注意力机制，用来关注文本不同特征方面（动词、名词），并行运算互不影响，每个头的权重是训练中调整的。 位置编码的向量传入，加入自注意力机制的权重表示，输出（三种信息融合在向量里）向量。（同一个词，上下文不同表示不同） 前馈神经网络，增加模型表达能力 解码器（生成）一个特殊值（便于考虑之前已经生成的上文保持上下文连贯性）已生成的输出序列经过另一编码器，但使用 带掩码的多头自注意力机制，即自注意力头只关注当前词和其之前的词的关系权重， 确保解码器生成文本遵循正确时间顺序 编码器传出的向量（token的抽象表示）-&gt;多头自注意力 用来捕捉解码器即将产生成的输出以及编码器输入之间的关系，使输入序列信息融合到解码器输出中 前馈神经网络，增加模型表达能力 线性层，softmax层，转换解码器输出到词汇表概率分布（实现猜下一个词） 扩展仅解码器：掩码语言建模、情感分析 BERT 仅解码器：猜测上下文文本生成 GPT2、3 解码器解码器模型/ 序列到序列模型：翻译总结 T5、bart","link":"/2024/03/12/LLM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"title":"MS_Office精简下载安装激活","text":"基于VL版本office的MS_Office精简下载安装激活 YouTube视频 下载官方部署器访问官方部署器地址：https://www.microsoft.com/en-us/download/details.aspx?id=49117 直接点击download，下载，并运行。 选择一空文件夹，完成程序。 下载部署自定义文件访问自定义网址：https://config.office.com/deploymentsettings 选择: 64位 批量许可证版本的office套件，对应的visio、project（这俩还看起来挺有用的，不用的话选择无）其他产品选择 语言包 应用-&gt;选择需要的项目 语言-&gt;选择中文 剩下的全部默认 导出-&gt;保留当前设置，命名为config 下载该文件，并导入当刚刚的文件夹中 下载、安装管理员cmd，cd到刚刚的文件夹 运行 setup /download config.xml 等待命令运行完毕（没有提示，等待弹出下一个输入框） 运行 setup /configure config.xml 等待安装完成，重启，看是否激活 未激活就管理员cmd格式下cd C:\\Program Files\\Microsoft Office\\Office16 重启并查看激活状态 还不行直接使用网上搜的kms激活VL版本office方法。","link":"/2024/03/24/MS-Office%E7%B2%BE%E7%AE%80%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB/"},{"title":"c++ STL 库 （未完成）","text":"c++ STL 库包含基本的图，列表，栈等数据结构以及基本操作，方便使用。 结构图 set（集合） 内部自动有序 不含重复元素 容器 1234567#include &lt;set&gt;set&lt;int&gt; name;set&lt;double&gt; name;set&lt;char&gt; name;set&lt;struct node&gt; name;set&lt;set&lt;int&gt; &gt; name;//注意：&gt; &gt;之间要加空格set&lt;int&gt; arr[10]; set容器内元素的访问set只能通过迭代器(iterator)访问(除了vector和string之外的STL容器都不支持*(it+i)的访问方式) ： 12set&lt;int&gt;::iterator it;set&lt;char&gt;::iterator it; 1234for (set&lt;int&gt;::iterator it = st.begin(); it != st.end(); it++){ cout &lt;&lt; *it &lt;&lt; endl;} 常用函数insert(value)1st.insert('C'); find(value)find(value)返回的是set中value所对应的迭代器，也就是value的指针（地址） 1cout &lt;&lt; *(st.find(2)) &lt;&lt; endl; erase(it)1st.erase(st.find(100)); //利用find()函数找到100,然后用erase删除它 erase(iteratorBegin , iteratorEnd)左闭右开 1st.erase(it, st.end()); size()1cout &lt;&lt; st.size() &lt;&lt; endl; vector（矢量） 变长数组 123456789#include &lt;vector&gt;vector&lt;int&gt; name;vector&lt;double&gt; name;vector&lt;char&gt; name;vector&lt;struct node&gt; name;vector&lt;vector&lt;int&gt; &gt; name;//注意：&gt; &gt;之间要加空格vector&lt;int&gt; array[SZIE]; //二维变长数组 二维数组中，它的一维形式就是地址。例如： 12int arr[3][2];//定义一个3行2列的地址cout&lt;&lt;arr[0]&lt;&lt;endl; //输出arr第1行的地址 output: 10x61fe00 //arr第1行的地址 vector容器内元素的访问（1）通过下标访问 1cout&lt;&lt;vi[0]&lt;&lt;endl; （2）通过迭代器访问 迭代器（iterator）可以理解为指针 123456789101112131415161718192021222324vector&lt;类型名&gt;::iterator 变量名;vector&lt;int&gt;::iterator it;vector&lt;double&gt;::iterator it; vector&lt;int&gt;::iterator it=v.begin(); for (int i = 0; i &lt; v.size(); i++) { cout&lt;&lt;it[i]&lt;&lt;&quot; &quot;; } vector&lt;int&gt;::iterator it=v.begin(); for (int i = 0; i &lt; v.size(); i++) { cout&lt;&lt;*(it+i)&lt;&lt;&quot; &quot;; } //vector的迭代器不支持it&lt;v.end()的写法，因此循环条件只能it!=v.end() for (vector&lt;int&gt;::iterator it=v.begin(); it!=v.end();it++) { cout&lt;&lt;*it&lt;&lt;&quot; &quot;; } vector常用函数实例解析（1）push_back(item)1v.push_back(i); （2）void pop_back()1v.push_back(i); （3）size()1cout&lt;&lt;v.size()&lt;&lt;endl; （4）clear()1v.clear(); （5）insert()123insert(__position,__x);v.insert(v.begin()+2,-1); //将-1插入v[2]的位置 （6）erase() 左闭右开12345erase(__position); //删除一个元素 v.erase(v.begin()+3);erase(__positionBegin,__positionEnd);//删除一个区间内的元素 v.erase(v.begin()+1,v.begin()+4);","link":"/2024/02/28/c++%20STL%20%E5%BA%93/"},{"title":"Verilog running in vscode","text":"尝试在vscode跑Verilog，记录一下。很久之前设置的，想到多少写多少吧： 一·添加的扩展： Verilog HDL：添加一个运行按钮，添加控制台输出（大概） Verilog Snippet：关键词高亮补全（大概） Verilog_Testbench：自动生成测试文件，用处不大。 Verilog-HDL/SystemVe：主要的，综合各个模块 WaveTrace：波形显示 二·部分设置：&quot;verilog.linting.linter&quot;: &quot;iverilog&quot; 三·报错：1.include 报错：`include “./my.v”找不到文件，使用相对绝对路径都不行：设置为：&quot;verilog.linting.iverilog.runAtFileLocation&quot;: true","link":"/2023/10/18/verilog-in-vscode/"},{"title":"【UltraISO】中文破解版","text":"UltraISO 中文破解版 下载链接以及激活码 下载链接：https://cn.ultraiso.net/uiso9_cn.exe 简体中文版专用： 12注册名：Guanjiu注册码：A06C-83A7-701D-6CFC 多国语言版专用: 12注册名: Home注册码: 4BA9-0D54-214A-C938","link":"/2024/03/23/%E3%80%90UltraISO%E3%80%91%E4%B8%AD%E6%96%87%E7%A0%B4%E8%A7%A3%E7%89%88/"},{"title":"c++ &amp; Linux 操作系统进程相关操作","text":"实现进程管理协同 fork()pipe() 实现进程通信 每个进程各自有不同的用户地址空间,任何一个进程的全局变量在另一个进程中都看不到，所以进程之间要交换数据必须通过内核,在内核中开辟一块缓冲区,进程A把数据从用户空间拷到内核缓冲区,进程B再从内核缓冲区把数据读走,内核提供的这种机制称为进程间通信。 API函数的使用以及注意点12#include &lt;unistd.h&gt;int pipe(int pipefd[2]); 参数说明： fd为文件描述符数组，其中fd[0]表示读端，fd[1] 表示写端 返回值： 成功返回0，失败返回-1，并且设置errno。 注意点： 管道内 没有数据时，读端（read）发生 阻塞，等待有效数据进行读取 管道容量被 数据填满时，写端（write）发生阻塞，等待进程将数据读走再进行写入 如果所有管道 写端对应的文件描述符被关闭，read返回0，但会将之前管道里的数据读完 如果所有管道的 读端对应的文件描述符被关闭，write操作会产生信号，SIGPIPE,进而导致write进程退出 当要写入的数据量不大于管道的容量（PIPE_BUF）时，linux将保证写入的原子性 当要写入的数据量大于管道容量(PIPE_BUF)时，linux将不再保证写入的原子性 fork子进程并使用pipe通信>folded1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;unistd.h&gt;#include &lt;sys/types.h&gt;#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;cstring&gt;#include &lt;sys/wait.h&gt;using namespace std;int main() { int pipe_fd[2]; // 0 for reading, 1 for writing pid_t cpid; char buf; // 创建管道 if (pipe(pipe_fd) == -1) { perror(&quot;pipe&quot;); } for (int i = 0; i &lt; 4; ++i) { cpid = fork(); if (cpid == -1) { perror(&quot;fork&quot;); } if (cpid == 0) { // 子进程 close(pipe_fd[0]); // 关闭读端 // 发送消息 string message = &quot;Child &quot; + to_string(getpid()) + &quot; is sending a message to parent!\\n&quot;; write(pipe_fd[1], message.c_str(), message.length()); close(pipe_fd[1]); // 发送完毕，关闭写端 } else { // 父进程不立即关闭管道，等待所有子进程发送完毕 } } // 父进程读取数据 close(pipe_fd[1]); // 关闭写端 while (read(pipe_fd[0], &amp;buf, 1) &gt; 0) { write(STDOUT_FILENO, &amp;buf, 1); } close(pipe_fd[0]); // 关闭读端 // 等待所有子进程退出 for (int i = 0; i &lt; 4; ++i) { wait(NULL); } return 0;} shmget() shmat() shmdt() shmctl() 实现进程间数据同步 int shmget(key_t key, size_t size, int shmflg); 目的：用于创建新的共享内存段或访问一个已存在的共享内存段。 void *shmat(int shmid, const void *shmaddr, int shmflg); 目的：将共享内存段附加到调用进程的地址空间。 int shmdt(const void *shmaddr); 目的：将共享内存段从当前进程的地址空间分离。 int shmctl(int shmid, int cmd, struct shmid_ds *buf); 目的：对共享内存段执行各种控制操作。 示例程序./2.cpp: >folded12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;iostream&gt;#include &lt;sys/ipc.h&gt;#include &lt;sys/shm.h&gt;#include &lt;cstring&gt;#include &lt;unistd.h&gt;#define SHM_SIZE 512 // 定义共享内存的大小int main() { key_t key = ftok(&quot;shmfile&quot;,65); // 生成唯一键 int shmid = shmget(key, SHM_SIZE, 0666|IPC_CREAT); // 创建共享内存 if (shmid == -1) { perror(&quot;shmget&quot;); exit(1); } // 将共享内存附加到进程的地址空间 char *data = (char*) shmat(shmid, (void*)0, 0); if (data == (char*)(-1)) { perror(&quot;shmat&quot;); exit(1); } // 等待进程B写入数据 std::cout &lt;&lt; &quot;Waiting for process B to write data...\\n&quot;; sleep(5); // 简单的同步机制，等待几秒 // 显示共享内存中的数据 std::cout &lt;&lt; &quot;Data read from shared memory: &quot; &lt;&lt; data &lt;&lt; std::endl; // 分离共享内存 if (shmdt(data) == -1) { perror(&quot;shmdt&quot;); exit(1); } // 删除共享内存 shmctl(shmid, IPC_RMID, NULL); return 0;} ./2.1.cpp: >folded123456789101112131415161718192021222324252627282930313233343536#include &lt;iostream&gt;#include &lt;sys/ipc.h&gt;#include &lt;sys/shm.h&gt;#include &lt;cstring&gt;#define SHM_SIZE 512 // 定义共享内存的大小int main() { key_t key = ftok(&quot;shmfile&quot;,65); // 生成唯一键 int shmid = shmget(key, SHM_SIZE, 0666); // 访问共享内存 if (shmid == -1) { perror(&quot;shmget&quot;); exit(1); } // 将共享内存附加到进程的地址空间 char *data = (char*) shmat(shmid, (void*)0, 0); if (data == (char*)(-1)) { perror(&quot;shmat&quot;); exit(1); } // 向共享内存写入数据 std::cout &lt;&lt; &quot;Writing to shared memory\\n&quot;; std::strncpy(data, &quot;Hello from process B!&quot;, SHM_SIZE); // 分离共享内存 if (shmdt(data) == -1) { perror(&quot;shmdt&quot;); exit(1); } return 0;}","link":"/2024/03/22/linux-cpp-progress/"},{"title":"从C++到python","text":"python的优点是简单易学，库安装简单配置丰富，写法简洁，本文目的即初步认识python的规则化写法。 环境安装 进入’https://www.jetbrains.com/pycharm/‘ 下载pycharm并安装。 根据引导安装应用并登录，创建你的第一段python代码。 差异 毋庸置疑，py比cpp更简单，写代码形式上亦是如此，大体上差别如下： 不需要头文件 主函数没有函数名 不需要{} 不需要; 接下来，从最简单的输出开始； 基本知识输入输出输出函数print()语法就是： 1print() 输入函数是 input()，功能是接收用户输入的内容，语法是： 1input（输出的内容） 举例：接收用户输入的密码并打印: 12n = input(&quot;请输入密码：&quot;) #把输入内容赋给n，用 n 接收一下print(n) #打印n 在Python里，“#” 表示注释，“#”后面的东西不会被执行。 123提示信息请输入密码：123123 变量 合法的标识符:大小写字母，数字(不能开头),下划线。 没有长度限制。 建议望文生义，函数名、变量名等命名方法各有区分： 123451. 包名：全小写，例如 time ;2. 类名：每个单词的首字母大写，其他的小写，简称大驼峰命名，例如 HelloWorld ；3. 变量名/函数名:第一个单词的首字母小写，后面的单词的首字母大写，简称小驼峰命名，例如 helloWorld ；4. 常量：全大写，例如 HELLO 。5. 其他命名方式，比如 hello_world 。 数据类型与c++不同，python不需要类型说明符，在设置时会自行分配。（不是没有!!!） 整型 浮点型 字符串 bool类型 None 是一个单独的数据类型 列表、元组、字典、集合也是常见的数据类型 类型转换：123int() #被转换的必须为全数字的字符串str()float() #被转换的必须为全数字的字符串 获取类型信息1234type() #返回的是对象的类型type().__name__sinstance(,) #常用来判断数据类型,返回bool 例子：1234f = 30print(type(f))print(type(f).__name__) print(isinstance(f,int)) 输出：1234f = 30print(type(f))print(type(f).__name__)print(isinstance(f,float)) 运算符运算符可以分为很多4类 一般运算符 +，-，*，/（真除法）,//（地板除，舍去小数部分）,%（取余数）,**（幂运算） 赋值运算符 =,+=，-=，*=，/=,%=,**=连续赋值：a=b=c=d=10 布尔运算符 == （等于），！=（不等于）, &gt;= ,&lt;= ,&gt;, &lt; 4.逻辑运算符 主要有not、and和or三类，又称非、与和或 and：前后都为真则为真or：有一个为真则为真not:非真，非假 例子： 12345678a = 10b = 20c = 30d = 40n1 = a &gt; b and a &lt; c #a&gt;b为假，a&lt;c为真，假与真为假n2 = not a &lt; c #a&lt;c为真，非真则为假n3 = a &gt; b or a &lt; c #a&gt;b为假，a&lt;c为真，假或真为真print(n1,n2,n3) 输出; 1False False True 流程控制条件分支 (if elif else)例子： 12345678910111213s = int(input(&quot;请输入分数:&quot;))if 80 &gt;= s &gt;= 60: print(&quot;及格&quot;)elif 80 &lt; s &lt;= 90: print(&quot;优秀&quot;)elif 90 &lt; s &lt;= 100: print(&quot;非常优秀&quot;)else: print(&quot;不及格&quot;) if s &gt; 50: print(&quot;你的分数在60分左右&quot;) else: print(&quot;你的分数低于50分&quot;) 输出： 123请输入分数:55不及格你的分数在60分左右 循环流程 while循环 语法： 12while 布尔表达式: 代码块 只要条件(布尔表达式)为真就执行里面的代码块。 举例：比如说输入一个整数并计算各个位和，例如输入321，那么各个位之和则为6。 12345678910111213# 请输入一个整数，并计算各个位和 如：321=6n = int(input(&quot;请输入一个整数:&quot;)) # 将字符串转为整型# sums累加器：m=10 m=10+5sums = 0while n != 0: # 32 #3 sums = sums + n % 10 # sums=1+2=3+3=6 n = n // 10 # 32print(sums) 输出： 12请输入一个整数:234514 for循环 语法： 12for 变量 in 可迭代对象: 代码块 例子： 123l=[3,2,1]for n in l: print(&quot;1&quot;) 输出： 123111 range for循环经常会搭配range来使用，range是一个可迭代对象，range的语法如下： 1range(start=0,stop,step=1) Range对象返回一个对象，该对象按步生成从开始(包含)到结束(排除)的整数序列。Range (i, j)产生i, i+1, i+2，…j - 1。Start默认为0,stop省略! Range(4)产生0,1,2,3。这些正是包含4个元素的列表的有效索引。 当给出step时，它指定增量(或减量)。 continue break continue跳过本次循环，后面的循环继续执行break终止循环 列表(List)列表是可以同时存放任何数据，包括整型，浮点型，字符串，布尔型等等，是常用的数据类型之一。 列表的创建123456789列表也是一个可迭代对象1. 普通形式 l = [1,2,3,4,5] ---整型列表 l = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;] ---字符串列表 l = [True,False,1&gt;2,5&lt;6]---布尔列表2. 混合列表 l = [1,2.5,&quot;a&quot;,True]3. 空列表 l = [] 从列表中获取数据列表是有下标的，并且下标从0开始，获取方法类似数组但是列表的下标正序从0开始，倒叙从-1开始 print(List)顺序输出整个列表 列表中数据交换例子： 123l = [1, 2, 3, 4, 5] # 下标/索引：0开始l[2], l[3] = l[3], l[2]print(l) Output: 1[1, 2, 4, 3, 5] 向列表添加元素123append(project) #列表尾插对象（作为整体）extend(project) #列表尾插可迭代对象 eg：两列表相连接insert(num,project) #指定下标位置添加对象（作为整体） 列表删除元素1234clear()#清空列表（列表还在，没被删除）pop()#删除下标指定的元素，如果不加下标则删除最后一个元素remove()#删除（正序第一个）指定的对象del()#删除变量(整个列表)或列表指定下标元素的值（补位） 例子: 12345678910111213141516171819l = [1, 2, 3, 4, 5]l2=[6, 7, 8, 9, 10]l.extend(l2)print(l)l.append(l2)print(l)l.insert(3,l2)print(l)l.pop(1)print(l)l.remove(l2)print(l)del l[-1]print(l)del lprint(l2)l2.clear()print(l2) Output 12345678[1, 2, 3, 4, 5, 6, 7, 8, 9, 10][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, [6, 7, 8, 9, 10]][1, 2, 3, [6, 7, 8, 9, 10], 4, 5, 6, 7, 8, 9, 10, [6, 7, 8, 9, 10]][1, 3, [6, 7, 8, 9, 10], 4, 5, 6, 7, 8, 9, 10, [6, 7, 8, 9, 10]][1, 3, 4, 5, 6, 7, 8, 9, 10, [6, 7, 8, 9, 10]][1, 3, 4, 5, 6, 7, 8, 9, 10][6, 7, 8, 9, 10][] 修改元素同数组。 列表高级特性切片操作切片，顾名思义就是把1个列表切分为多个列表，语法如下： 1变量[起始下标:结束下标] #结束下标取不到 做切片操作时要注意以下几个点： 如果下标从0开始可以省略不写，例如 n = l[:4]。 如果结束下标取的是最后一个元素，可以省略不写，例如 n = l[3:]。 如果列表中的元素都要，开始和结束下标都可以省略，例如 n = l[:]。 n = l[:-1] 表示从0开始 - 到数二个元素。例子： 12l = [1, 2, 3, 4, 5]print(l[0:4]) Output 1[1, 2, 3, 4] 等距抽取方法是 n = l[开始:结束:步长] ，这个方法既可以正向去操作列表，也可以反向去操作列表,例如: 123l = [1, 2, 3, 4, 5]n = l[-1:-3:-1]print(n) Output 1[5, 4] 列表的一些操作符比较运算符列表之间进行比较，以相同下标进行比较，从小到大进行比较，如果值相同则比较下一组元素，如果不同直接出结果，例如： 123l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # 下标/索引：0开始l2 = [2, 3, 4, 6]print(l &lt; l2) # True Output 1True 逻辑运算符逻辑运算符and not or 跟比较运算符相似，返回结果都是布尔值（True/False） 拼接运算符拼接运算符是 + ，常用来进行两个列表拼接 123l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # 下标/索引：0开始l2 = [2, 3, 4, 6]print(l + l2) 重复操作符重复操作符为 * ，后面常跟数字，表示将列表里面的元素重复复制几遍 12l2 = [2, 3, 4, 6]print(l2*2) 成员关系操作符成员关系操作符主要有 in和not in，用来判断元素是否在列表中，返回结果是布尔值 12l = [2, 3, 4, 6]print(5 not in l) #输出“5不在列表l中”这句话的真假 执行结果 1True 列表的其他方法123456copy()#浅拷贝count(project)#返回对象在列表中出现的次数index(value,开始下标,结束下标)#元素出现的第一次下标位置，也可自定义范围reverse()#原地翻转sort (key=None reverse=False)#快速排序，默认从小到大排序，key:算法len()#获取列表长度 二维列表12345#变量[外层列表下标][内层列表的下标]l = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]for i in l: for j in i: print(j) Output 123456789123456789 元组（tuple）元组的创建及访问 元组用（）的形式，是可迭代对象，是有序的，下标操作,支持切面操作 [:]同列表，不再赘述。 修改和删除元组是不可变类型，不能修改，但是可以通过将元组转换成列表的形式进行修改和删除等操作，最后再将列表转换成元组，完成元组的修改和删除。例如：修改元组中的元素: 1234567t = (1, 2, 3, 4, 5)l = list(t) #将元组转换成列表print(l) #输出列表l[2] = 6 #列表指定元素的修改print(l) #输出新列表t = tuple(l) #列表转换成元组print(t) Output 123[1, 2, 3, 4, 5][1, 2, 6, 4, 5](1, 2, 6, 4, 5) 元组的操作符元组同样也有着操作符，方法跟列表的操作符是一样的,不再赘述。 元组的方法对其操作先转换成列表再行操作，不再赘述。另外有两种方法新增： 123451. count(value)#统计某个值出现的次数，value是指定的值2. index(value,[start],[stop])#返回value在元组中(start到stop间)出现的下标位置（第一次出现的下标） 字符串在Python中，字符和字符串没有区别。可用' '也可以是” “ 字符串的特点1234567891. 字符串不可变类型2. 字符串是可迭代对象3. 字符串支持索引和切片操作4. 支持操作符; 拼接：+ 重复操作符：* 比较运算符： &gt; &lt; &lt;= &gt;= == != 逻辑运算符：not and or 成员关系： in not in 字符串的方法123456789capitalize()#把字符串的第一个字符改为大写，后面的小写casefold()#把整个字符串都小写encode()#编码 str--bytes (二进制字符串)decode()#解码count(sub,start, stop)#返回字符(sub)出现的次数，star: 开始下标，stop:结束下标find(sub,start,stop)# 返回sub第一次出现的下标,查不到返回-1index(sub, start, stop)#返回sub第一次出现的下标，查不到报错upper()#将字符串转为大写1ower()#将字符串转为小写 格式化输出 format 语法1：用数字占位（下标）12345&quot;{0} 嘿嘿&quot;.format(&quot;Python&quot;)a = 100s = &quot;{0}{1}{2} 嘿嘿&quot;s2 = s.format(a, &quot;JAVA&quot;, &quot;C++&quot;)print(s2) 2.format 语法2：{} 占位123456a = 100s = &quot;{}{}{} 嘿嘿&quot;s2 = s.format(a, &quot;JAVA&quot;, &quot;C++&quot;, &quot;C# &quot;)print(s2)#Output100JAVAC++ 嘿嘿 3.format 语法3：{} 占位用字母占位12345s = &quot;{a}{b}{c} 嘿嘿&quot;s2 = s.format(b=&quot;JAVA&quot;, a=&quot;C++&quot;, c=&quot;C# &quot;)print(s2)#Output:C++JAVAC# 嘿嘿 s.format(s2)可理解为使用s格式化s2 4.%s 语法为 “%s”%（值） ，最常用的参数可以是任意值。例子： 123456789101112131415for i in range(1, 10): for j in range(1, i + 1): print(&quot;%s * %s = %s&quot; % (i, j, i * j), end=&quot;\\t&quot;) print()#Output:1 * 1 = 1 2 * 1 = 2 2 * 2 = 4 3 * 1 = 3 3 * 2 = 6 3 * 3 = 9 4 * 1 = 4 4 * 2 = 8 4 * 3 = 12 4 * 4 = 16 5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25 6 * 1 = 6 6 * 2 = 12 6 * 3 = 18 6 * 4 = 24 6 * 5 = 30 6 * 6 = 36 7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49 8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64 9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81 转义字符12341. “\\n” ：换行符2. “\\'”:单引号3. “\\“”:双引号4. &quot;\\\\&quot; : \\ 在这里值得注意的是 \\ ，它有很多比较巧的运用，比如可以实现代码换行 12345678910111213a = &quot;sxsxsxsxsxsxsxs\\ xsxsxsxs\\ xsx&quot;print(a)a = 1 + 2 + 3 \\ + 4print(a)#Output:sxsxsxsxsxsxsxs xsxsxsxs xsx10 字典（dict）字典是用来存储数据的，字典中的数据以映射关系存储。 字典的特点 字典是Python中唯一的映射类型 字典是无序的 字典是可迭代对象 字典的构成: 键：key 值：value 映射：键映射值 键-值：键值对，又叫 项 创建字典1234561. 直接创建 语法： d = {} #空字典 例如： d = {&quot;name&quot;:&quot;不良人&quot;,&quot;apple&quot;:&quot;苹果&quot;}2. dict() 例如：d = dict() #空字典3. dict(可迭代对象) 例子： 1234d3 = dict([(&quot;one&quot;,1),(&quot;two&quot;,2)])print(d3)#Output：{'one': 1, 'two': 2} 这就是一个元组，one是键，1是值， ‘one’ : 1 是键值对。 14. dict(**kwargs) 例子： 1234d4 = dict(a=3, b=4)print(d4)#Output:{'a': 3, 'b': 4} 字典访问 基本形式： 变量名[键名] #键所对应的值 添加一个键值对 变量名[键名]=值 修改一个键值对的值 变量名[键名]=值 Example 1234d = {&quot;name&quot;: &quot;小黑&quot;}print(d[&quot;name&quot;])#Output:小黑 字典的方法","link":"/2023/07/01/%E4%BB%8EC-%E5%88%B0python/"},{"title":"使用giscus为blog添加评论系统","text":"giscus指一个非常好用的由GitHub讨论支持的评论系统，它可以让你把仓库中的讨论整合到你的博客中。 如何使用 GitHub 讨论作为聊天系统为了将GitHub讨论整合到你的博客，我们将使用 giscus。giscus是一个由GitHub讨论支持的评论系统。它可以让你把仓库中的讨论整合到你的博客中。 你的读者可以在你的博客上留下评论，这些评论会同时出现在你的博客和你的代码库的讨论页面上。 使用讨论区作为你的博客聊天系统的优势 它是完全免费的 没有广告或跟踪 它超级强大 你对评论有完全的控制权和完全的修改权。 有很多主题 它是相当可自定义的 你可以在你自己的服务器上自行托管 请记住，此工具主要适用于开发者博客，因为大多数开发人员使用 GitHub。 如何在你的博客中整合giscus先决条件 一个博客（你必须能够获得源代码） 一个 GitHub 帐户 你选择的代码库必须是公开的 首先，你需要为你的代码库启用讨论功能。 转到代码库 Settings-&gt; 在 Features部分下 -&gt; 勾选 Discussions框。接下来，在你的代码库中安装giscus应用程序。转到 giscus主页，按照提示操作，并仅授予对选定代码库的访问权限。现在是重要的部分：我们需要配置giscus小部件。 首先，进入giscus主页，滚动到 Configuration部分。 选择您的小部件语言，这是您想要显示小部件的语言。然后输入你的代码库名称和你的用户名，如用 username/reponame。对于页面↔️讨论映射，我建议选择 “讨论标题包含页面 URL”。但根据你的需要，选择最适合你的那一个。接下来，在你的GitHub 代码库上的讨论页面创建一个类别——比如 “Comments（评论）”——或者选择现有的类别。 然后根据需要启用可选功能。 接下来，选择主题。不要担心，你可以通过编程来切换不同的主题。 最后，复制并粘贴生成的代码。 Giscus将根据你的设置生成一个脚本标签，你可以将其粘贴到你的代码中。","link":"/2024/03/08/%E4%BD%BF%E7%94%A8giscus%E4%B8%BAblog%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"},{"title":"使用github codespace + github page + hexo 无服务器发布运行个人博客","text":"hexo是一个可以github page 托管的静态页面博客框架，需要node.js进行编译发布，鉴于windows配置node.js的不变性，使用github codespace托管运行环境以及博客源码，进行无服务器博客运营。 icarus 主题 整体颜色改变：/node_modules/hexo-theme-icarus/include/style/base.styll15 $primary ?= hsl(30, 100%, 50%) 更改两栏布局下文章宽度 部分更改 调整背景透明度themes\\icarus\\source\\js\\animation.jsL44 https://blog.mchook.cn/2021/07/22/icarus%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89/https://blog.pk5ls20.com/posts/111d57cd/#span-%E8%83%8C%E6%99%AF%E5%9B%BE%E5%85%A8%E5%B1%8F%E5%8C%96-%E6%AF%9B%E7%8E%BB%E7%92%83%E6%95%88%E6%9E%9C-span 我使用的布局：.is-3-colum 可以在Markdown文件中使用下面的语法来折叠单独的代码块： 123{% codeblock &quot;可选文件名&quot; lang:代码语言 &gt;folded %}...代码块内容...{% endcodeblock %}","link":"/2024/03/08/%E4%BD%BF%E7%94%A8github-codespace-github-page-hexo-%E7%BA%BF%E4%B8%8A%E7%BC%96%E8%BE%91%E5%8F%91%E5%B8%83%E8%BF%90%E8%A1%8C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"title":"基于quatrus的verilog学习","text":"quartus是一个配置麻烦的硬件编程平台，本文包括安装配置到常见问题解答，环境优化。 quatrus安装以及modelsim配置 quatrus 不操作 modism.exe 的文件夹加入到path modism文件夹下，win64下 LISCENSE.TXT 加入到 path（user） tools-&gt;options-&gt;general-&gt;eda tools 中设置modelsim路径D:\\Program\\modeltech64_10.4\\win64（exe路径文件夹） 常见问题解决以及优化设置编译器件库位置（新项目都需要）同时也解决了 Quartus Prime18.0 中解决仿真报错 Error: (vsim-19) Failed to access library 的问题 点击Tools-&gt;Launch Simulation Library Compile; 设置“Output directory&quot;为：{项目文件夹}/simulation/qsim，在进行编译,如此设置以后，波形图simulation-&gt;simulation settings中的路径直接默认就行 （主要是这里编译的器件库路径要匹配波形图simulation-&gt;simulation settings中的路径） 联合vscode开发点击tools中的options，点击其中的 preferred text editor，在 textx editor栏中选择custom，在command-line中添加如下的信息&quot;E:\\Microsoft VS Code\\Code.exe&quot; -r -g %f:%l","link":"/2024/03/28/%E5%9F%BA%E4%BA%8Equatrus%E7%9A%84verilog%E5%AD%A6%E4%B9%A0/"},{"title":"AcWing 796.子矩阵的和","text":"AcWing 796.子矩阵的和 第二层矩阵存当前（0，0）-（x，y）和，求x1yx1-x2y2类似于求面积可理解为坡度(大概) 12345678910111213141516171819202122232425262728293031323334#include&lt;iostream&gt;#include&lt;cmath&gt;#include&lt;string&gt;#include&lt;iomanip&gt;#include&lt;algorithm&gt;#include&lt;map&gt;#include&lt;vector&gt;#include&lt;set&gt;using namespace std;typedef long long ll;const int N=100010;ll v[N][1000][2]={0};int main(){ int n,m,q; cin&gt;&gt;n&gt;&gt;m&gt;&gt;q; for(int j=1;j&lt;=n;j++){ for(int i=1;i&lt;=m;i++){ cin&gt;&gt;v[j][i][0]; v[j][i][1]=v[j-1][i][1]+v[j][i-1][1]-v[j-1][i-1][1]+v[j][i][0]; } } int x1,y1,x2,y2,count; for(int i=0;i&lt;q;i++){ count=0; cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2; ll count=v[x2][y2][1]-v[x2][y1-1][1]-v[x1-1][y2][1]+v[x1-1][y1-1][1]; cout&lt;&lt;count&lt;&lt;endl; }}","link":"/2024/03/18/%E5%AD%90%E7%9F%A9%E9%98%B5%E7%9A%84%E5%92%8C/"},{"title":"样式测试","text":"这是一个简单的样式测试页面 主题1主题2主题3主题4主题5细细细细 粗体粗体粗体粗体粗体 细细细细细细 斜体斜体 删除删除删除删除删除 下划线下划线下划线下划线 引用引用引用引用 hangneidaima行内代码` 12345代码块代码块代码块代码块代码块代码块 无序列表 无序列表 无序列表 无序列表、 有序列表 有序列表 有序列表 有序列表 链接链接链接链接 @提及提及提及提及提及","link":"/2024/03/07/%E6%A0%B7%E5%BC%8F%E6%B5%8B%E8%AF%95/"},{"title":"费曼技巧","text":"所谓的“费曼技巧”，来源模糊，需要调查确认，在网上找到了两项证据，可以支持**【** **通过向别人清楚地解说一件事，来确认自己真的弄懂了这件事。** **】** ，但费曼本人是否提出过【费曼技巧】，尚未找到证据。无论如何，**上网时请不要轻信未经证实的信息。** 知乎原文 费曼和他的老师曾经提倡过“以教促学” 原文来自 Quora: 如何才能学得快一些 (How can you learn faster) 第一步 - 选择一个你想要理解的概念选择一个你想要理解的概念, 然后拿出一张白纸, 把这个概念写在白纸的最上边. 第二步 - 设想一种场景，你正要向别人传授这个概念在白纸上写下你对这个概念的解释, 就好像你正在教导一位新接触这个概念的学生一样. 当你这样做的时候, 你会更清楚地意识到关于这个概念你理解了多少, 以及是否还存在理解不清的地方. 第三步 - 如果你感觉卡壳了, 就回顾一下学习资料无论何时你感觉卡壳了, 都要回到原始的学习资料并重新学习让你感到卡壳的那部分, 直到你领会得足够顺畅, 顺畅到可以在纸上解释这个部分为止.第四步 - 为了让你的讲解通俗易懂，简化语言表达最终的目的, 是用你自己的语言, 而不是学习资料中的语言来解释概念. 如果你的解释很冗长或者令人迷惑, 那就说明你对概念的理解可能并没有你自己想象得那么顺畅 – 你要努力简化语言表达, 或者与已有的知识建立一种类比关系, 以便更好地理解它。","link":"/2024/03/17/%E8%B4%B9%E6%9B%BC%E6%8A%80%E5%B7%A7/"},{"title":"Vmware 无ui启动&#x2F;停止 虚拟机","text":"Vmware 无ui启动/停止 虚拟机 , 并优化启动速度 虚拟机设置中 3d加速-&gt; 关闭（没有图形界面打开这个会导致加载很慢） windows(win10)批处理脚本 打开vm虚拟机的服务,并且开启无界面虚拟机 123456789101112131415@echo offnet start &quot;vds&quot;net start &quot;VMAuthdService&quot;net start &quot;VMnetDHCP&quot;net start &quot;VMware NAT Service&quot;net start &quot;VMUSBArbService&quot;net start &quot;VMwareHostd&quot;&quot;D:\\ApplicationFiles\\System\\VMware Workstation\\vmrun.exe&quot; start &quot;F:\\virtualMachine\\ubuntu15.1X64\\ubuntu15.1X64.vmx&quot; nogui 保存为startvm.bat 1234567891011121314151617@echo off&quot;D:\\ApplicationFiles\\System\\VMware Workstation\\vmrun.exe&quot; stop &quot;F:\\virtualMachine\\ubuntu15.1X64\\ubuntu15.1X64.vmx&quot; noguinet stop &quot;vds&quot;net stop &quot;VMnetDHCP&quot;net stop &quot;VMware NAT Service&quot;net stop &quot;VMwareHostd&quot;net stop &quot;VMUSBArbService&quot;net stop &quot;VMAuthdService&quot;保存为shutdownvm.bat 说明: D:\\ApplicationFiles\\System\\VMware Workstation\\vmrun.exe 为虚拟机安装目录/ps:如果你把vmrun路径加入了环境变量path后,可以直接使用命令vmrun F:\\virtualMachine\\ubuntu15.1X64\\ubuntu15.1X64.vmx 为虚拟机文件位置 生成的文件创建快捷方式,右键-属性-高级,设置下管理员权限运行,以后双击即可执行 打开还要等个一分钟左右启动好,具体看你的系统性能 接下来就可以正常ssh连接了 下面重点说一下用到的知识点原理 一,首先说一下,window上面如何操作服务(win10 x64) windows上使用sc命令net命令设置操作服务,批处理关闭服务命令 开启服务命令 使用sc命令： 1 修改服务启动类型 sc config 服务名 start= demand (设置服务为手动启动) start= auto (设置服务为自动启动) start= disabled (设置服务为禁用) 2 安装服务：sc create 服务名 3 停止服务：sc stop 服务名 4 启动服务 : sc start 服务名 5 卸载服务：sc delete 服务名（卸载前先停止服务） 使用net命令 查看运行的服务： net start 启动服务： net start 服务名 停止服务： net stop 服务名 卸载服务： 服务名 -uninstall （卸载前先停止服务） 注意注意注意: start后面不能有空格 =后面的参数需要有一个空格 不是一个单词（含空格）的服务名字,需要用引号 综上所述我们可以使用: 启动服务： net start 服务名 或者 sc start 服务名 停止服务： net stop 服务名 或者 sc stop 服务名","link":"/2024/04/13/Vmware-UbuntuServer-noui-install/"},{"title":"ununtu安装node.js_LTS","text":"ubuntu 安装 LTS 版本 Node.js ubuntu 安装 LTS 版本 Node.js今天在服务器上安装 Node.js ，用了下面的命令： 12$ sudo apt-get update$ sudo apt-get install nodejs 结果看了下安装的版本居然是 10.x 的，现在 LTS 版本都是 14.x 了，怎么才能安装 LTS 版本呢？网上搜了下可以在安装的时候指定版本： 1$ sudo apt install nodejs=14.18.1 但是执行却提示找不到版本： Version ‘14.18.1’ for ‘nodejs’ was not found 又到网上查了下，原来是要添加源之后安装： 1$ curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - 这里添加的是 14.x 的版本，如果安装其他版本，只需要修改添加源地址的数字即可 再次尝试安装： 1$ sudo apt-get install -y nodejs 安装成功，查看版本号： 12$ node -v # v14.18.1$ npm -v # 6.14.15","link":"/2024/04/13/ununtu%E5%AE%89%E8%A3%85node-js-LTS/"},{"title":"ununtu_shell_tools","text":"ubuntu 常用的shell命令合集 Linux终端命令ubuntu安装插件命令12sudo apt-get install 插件名称(tree)1 查看硬盘容量信息1234df -h#查看当前目录文件夹占用磁盘空间du -sh *123 查看内存使用情况123cat /proc/meminfofree -h12 查看当前目录12pwd1 创建文件(创建file.txt文件)12touch file.txt1 查看帮助文档1234command --helpman command123 ls命令 选项 说明 -a 显示隐藏文件（以.开头的文件） -l 显示文件详细信息 -h 显示文件大小 需要配合-l选项使用 ls通配符 通配符 说明 * 代表任意个数字符 ? 代表一个字符 [] 标识匹配字符数组中的任意一个 [abc] 匹配a、b、c中任意一个字符 [a-f] [0-9] 匹配a到f范围内的任意一个字符 mkdir递归创建文件夹12mkdir -p dir1/dir2/dir31 rm命令 选项 说明 -r 递归删除 -f 强制删除。忽略不存在的文件，不提示确认 -d 删除空目录 拷贝和移动文件1、tree [目录名]: 以树状图列出文件目录结构 选项 说明 -d 只显示目录 2、cp 源文件 目标文件: 复制文件或者目录 选项 说明 -i 覆盖文件前提示 -r 递归复制该目录下所有子目录和文件，目标文件必须是一个目录名 3、mv 源文件 目标文件: 选项 说明 -i 覆盖文件前提示 查看文件内容1、cat 文件名: 查看文件内容、创建文件、文件合并、追加文件内容等功能（一次完整显示） 选项 说明 -b 对非空行编号 -n 对所有行编号 2、more 文件名: 分屏显示文件内容（分屏显示） 操作键 说明 空格 下一屏 enter 下一行 b 回滚一屏 f 前滚一屏 q 退出 /搜索字符串 搜索 3、grep 搜索内容（搜索内容有关键词、空格需要加上双引号） 文件名: 搜索文本文件内容 选项 说明 -n 显示行号 -v 显示不包含匹配文本的所有行 -i 忽略大小写 常用的两种模式查找 ^a：行首，搜索以a开头的行 d$：行尾，搜索以d结尾的行 其他命令1、echo 文字内容 echo会在终端中显示参数指定的文字,通常会和重定向联合使用 2、重定向&gt;和&gt;&gt; 表示输出，会覆盖文件原有的内容 （将终端中输入的内容输出到文件中） 表示追加，会将内容追加到已有文件的末尾（将终端中输入的内容追加到文件末尾） 所有命令终端输出结果都可以使用&gt;和&gt;&gt;重定向到文件中例如 3、管道| Linux允许将一个命令的输出可以通过管道做为另一个命令的输入 可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里的左右分为两端，左端塞东西(写)，右端取东西(读) 常用的管道命令有: more: 分屏显示内容 grep: 在命令执行结果的基础上查询指定的文本 远程管理常用命令关机重启1234567shutdown [选项] [时间]# 选项 -r 重新启动showdown -t now shutdown 20:10shutdown +10 #10分钟后关机shutdown -c #取消关机123456 查看网卡信息1234ip aip addressifconfig123 ssh命令(远程连接)123ssh [-p 端口号] 用户名@ip(或者域名)ssh root@ip12 scp(远程复制文件)1234scp [-P 端口号] 文件名称或路径 用户名@ip(或者域名):路径 # 复制本地文件到远程服务器# 选项 -r 若给出的源文件是目录文件 则scp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名scp D:\\dir\\s.txt root@ip:/tmp123 123scp [-p 端口号] 用户名@ip(或者域名):文件名称或路径 路径 # 复制远程服务器文件到本地scp zhaosc@192.168.174.129:/home/zhaosc/demo/demo.txt D:\\12 注：要确认安装ssh服务端和客户端 123sudo apt-get install openssh-server# 安装服务端12 ssh高级免密码登录 home目录下 .ssh隐藏文件夹 known_hosts文件存储授权信息 1231、配置公钥 执行ssh-keygen即可生成SSH钥匙，一路回车即可12 id_rsa 和 id_rsa.pub 远程登陆时用来加密使用的文件 12342、上传公钥到服务器(id_rsa.pub) 执行ssh-copy-id -p port user@remote ，可以让远程服务器记住我们的公钥 ssh-copy-id -p 22 root@47.117.64.2123 本地使用私钥对数据进行加密/解密 服务器使用公钥对数据进行加密 以上命令在本地客户端执行 需要将本地客户端公钥（id_rsa.pub）添加到远程服务端的 ~/.ssh/authorized_keys中（可以手动添加，注意单行添加） 配置别名（在本地客服端创建 .ssh/config）12345678910111213.ssh/config配置信息如下---------------------------------Host aly # 别名 HostName ip # ip/域名 User root # 用户名 Port 22 # 端口号----------------------------------登录ssh aly复制文件scp -r aly:/usr/local/tomcat/webapps D:\\---------------------------------123456789101112 用户和权限ls -l 权限信息： 文件 -开头； 文件夹 d开头 ；r可读w可写x可执行 权限列为三列(三个一组) 依次是 用户权限 组权限 其他用户权限 用户和组信息： 前面为用户后面为组 chmod命令12chmod +/- rwx1 用户组管理123groupadd 组名 # 添加组groupdel 组名 # 删除组12","link":"/2024/04/13/ununtu-shell-tools/"},{"title":"YOLOv5参数解析","text":"YOLOv5参数解析，主要解析源码中train.py文件中包含的参数。 5000字多图长文预警！手把手带你调参Yolo v5（二） 1.1’–weights’ 1.2’–cfg’ 1.3’–data’ 1.4’–hyp’ 1.5’–epochs’ 1.6’–batch-size’ 1.7’–imgsz’, ‘–img’, ‘–img-size’ 1.8’–rect’🍀 1.9’–resume’🍀10’–nosave’ 1.11’–noval’ 1.12’–noautoanchor’🍀 1.13’–evolve’🍀 1.14’–bucket’ 1.15’–cache’ 1.16’–image-weights’ 1.17’–device’ 1.18’–multi-scale’🍀 1.19’–single-cls’ 1.20’–optimizer’ 1.21’–sync-bn’ 1.22’–workers’ 1.23’–project’ 1.24’–name’ 1.25’–exist-ok’ 1.26’–quad’ 1.27’–cos-lr’🍀 1.28’–label-smoothing’🍀 1.29’–patience’ 1.30’–freeze’🍀 1.31’–save-period’ 1.32’–local_rank’ 1.33’–entity’ 1.34’–upload_dataset’ 1.35’–bbox_interval’ 1.36’–artifact_alias’ 0.首次运行常见错误🍀刚拿到代码可以运行train.py文件看看，一般都会出现这个错误： 1OMP: Hint This means that multiple copies of the OpenMP runtime have been linked into the program. That is dangerous, since it can degrade performance or cause incorrect results. The best thing to do is to ensure that only a single OpenMP runtime is linked into the process, e.g. by avoiding static linking of the OpenMP runtime in any library. As an unsafe, unsupported, undocumented workaround you can set the environment variable KMP_DUPLICATE_LIB_OK=TRUE to allow the program to continue to execute, but that may cause crashes or silently produce incorrect results. For more information, please see http://www.intel.com/software/products/support/. 解决方案：在train.py文件里加入以下代码： 12import osos.environ['KMP_DUPLICATE_LIB_OK']='TRUE' 1.train.py参数解析🚀首先还是打开根目录下的 train.py，直接看 parse_opt() 1.1’–weights’1parser.add_argument(&quot;--weights&quot;, type=str, default=ROOT / &quot;yolov5s.pt&quot;, help=&quot;initial weights path&quot;) 指定预训练权重路径；如果这里设置为空的话，就是自己从头开始进行训练；下图是官方提供的预训练权重 1.2’–cfg’指定模型配置文件路径的；源码里面提供了以上这5个配置文件，配置文件里面指定了一些参数信息和backbone的结构信息。 1.3’–data’1parser.add_argument(&quot;--data&quot;, type=str, default=ROOT / &quot;data/coco128.yaml&quot;, help=&quot;dataset.yaml path&quot;) 数据集对应的参数文件；里面主要存放数据集的类别和路径信息。 yolo源码里面提供了9种数据集的配置文件 1.4’–hyp’指定超参数文件的路径；超参数里面包含了大量的参数信息，同样提供了5个 1.5’–epochs’1parser.add_argument(&quot;--epochs&quot;, type=int, default=100, help=&quot;total training epochs&quot;) 训练的轮数；默认为300轮，显示效果是0-299 1.6’–batch-size’1parser.add_argument(&quot;--batch-size&quot;, type=int, default=16, help=&quot;total batch size for all GPUs, -1 for autobatch&quot;) 每批次的输入数据量；default=-1将时自动调节 batchsize大小。 ❝ 这里说一下epoch、batchsize、iteration三者之间的联系 1、batchsize是批次大小，假如取batchsize=24，则表示每次训练时在训练集中取24个训练样本进行训练。 2、iteration是迭代次数，1个iteration就等于一次使用24（batchsize大小）个样本进行训练。 3、epoch：1个epoch就等于使用训练集中全部样本训练1次。 1.7’–imgsz’, ‘–img’, ‘–img-size’1parser.add_argument(&quot;--imgsz&quot;, &quot;--img&quot;, &quot;--img-size&quot;, type=int, default=640, help=&quot;train, val image size (pixels)&quot;) 训练集和测试集图片的像素大小；输入默认640*640，这个参数在你选择yolov5l那些大一点的权重的时候，要进行适当的调整，这样才能达到好的效果。 1.8’–rect’🍀1parser.add_argument(&quot;--rect&quot;, action=&quot;store_true&quot;, help=&quot;rectangular training&quot;) 是否采用矩阵推理的方式去训练模型； ❝ 所谓矩阵推理就是不再要求你训练的图片是正方形了；矩阵推理会加速模型的推理过程，减少一些冗余信息。 下图分别是方形推理方式和矩阵推理方式 1.9’–resume’🍀1parser.add_argument(&quot;--resume&quot;, nargs=&quot;?&quot;, const=True, default=False, help=&quot;resume most recent training&quot;) 断点续训：即是否在之前训练的一个模型基础上继续训练，default 值默认是 false；如果想采用断点续训的方式，这里我推荐一种写法，即首先将default=False 改为 default=True 随后在终端中键入如下指令 1python train.py --resume D:\\Pycharm_Projects\\yolov5-6.1-4_23\\runs\\train\\exp19\\weights\\last.pt D:\\Pycharm_Projects\\yolov5-6.1-4_23\\runs\\train\\exp19\\weights\\last.pt 为你上一次中断时保存的pt文件路径 输入指令后就可以看到模型是继续从上次结束时开始训练的 1.10’–nosave’1parser.add_argument(&quot;--nosave&quot;, action=&quot;store_true&quot;, help=&quot;only save final checkpoint&quot;) 是否只保存最后一轮的pt文件；我们默认是保存best.pt和last.pt两个的 1.11’–noval’1parser.add_argument(&quot;--noval&quot;, action=&quot;store_true&quot;, help=&quot;only validate final epoch&quot;) 只在最后一轮测试；正常情况下每个epoch都会计算mAP，但如果开启了这个参数，那么就只在最后一轮上进行测试，不建议开启 1.12’–noautoanchor’🍀1parser.add_argument(&quot;--noautoanchor&quot;, action=&quot;store_true&quot;, help=&quot;disable AutoAnchor&quot;) 是否禁用自动锚框；默认是开启的，自动锚点的好处是可以简化训练过程； yolov5中预先设定了一下锚定框，这些锚框是针对coco数据集的，其他目标检测也适用，可以在models/yolov5.文件中查看，例如如图所示，这些框针对的图片大小是640640。这是默认的anchor大小。需要注意的是在目标检测任务中，一般使用大特征图上去检测小目标，因为大特征图含有更多小目标信息，因此大特征图上的anchor数值通常设置为小数值，小特征图检测大目标，因此小特征图上anchor数值设置较大。 在yolov5 中自动锚定框选项，训练开始前，会自动计算数据集标注信息针对默认锚定框的最佳召回率，当最佳召回率大于等于0.98时，则不需要更新锚定框；如果最佳召回率小于0.98，则需要重新计算符合此数据集的锚定框。在parse_opt设置了默认自动计算锚框选项，如果不想自动计算，可以设置这个，建议不要改动。 1.13’–evolve’🍀1parser.add_argument(&quot;--evolve&quot;, type=int, nargs=&quot;?&quot;, const=300, help=&quot;evolve hyperparameters for x generations&quot;) 遗传超参数进化；yolov5使用遗传超参数进化，提供的默认参数是通过在COCO数据集上使用超参数进化得来的（也就是下图这些参数）。由于超参数进化会耗费大量的资源和时间，所以建议大家不要动这个参数。 遗传算法是利用种群搜索技术将种群作为一组问题解，通过对当前种群施加类似生物遗传环境因素的选择、交叉、变异等一系列的遗传操作来产生新一代的种群，并逐步使种群优化到包含近似最优解的状态，遗传算法调优能够求出优化问题的全局最优解，优化结果与初始条件无关，算法独立于求解域，具有较强的鲁棒性，适合于求解复杂的优化问题，应用较为广泛。 1.14’–bucket’1parser.add_argument(&quot;--bucket&quot;, type=str, default=&quot;&quot;, help=&quot;gsutil bucket&quot;) 谷歌云盘；通过这个参数可以下载谷歌云盘上的一些东西，但是现在没必要使用了 1.15’–cache’1parser.add_argument(&quot;--cache&quot;, type=str, nargs=&quot;?&quot;, const=&quot;ram&quot;, help=&quot;image --cache ram/disk&quot;) 是否提前缓存图片到内存，以加快训练速度，默认False；开启这个参数就会对图片进行缓存，从而更好的训练模型。 1.16’–image-weights’1parser.add_argument(&quot;--image-weights&quot;, action=&quot;store_true&quot;, help=&quot;use weighted image selection for training&quot;) 是否启用加权图像策略，默认是不开启的；主要是为了解决样本不平衡问题；开启后会对于上一轮训练效果不好的图片，在下一轮中增加一些权重； 1.17’–device’1parser.add_argument(&quot;--device&quot;, default=&quot;&quot;, help=&quot;cuda device, i.e. 0 or 0,1,2,3 or cpu&quot;) 设备选择；这个参数就是指定硬件设备的，系统会自己判断的 1.18’–multi-scale’🍀1parser.add_argument(&quot;--multi-scale&quot;, action=&quot;store_true&quot;, help=&quot;vary img-size +/- 50%%&quot;) 是否启用多尺度训练，默认是不开启的；多尺度训练是指设置几种不同的图片输入尺度，训练时每隔一定iterations随机选取一种尺度训练，这样训练出来的模型鲁棒性更强。 多尺度训练在比赛中经常可以看到他身影，是被证明了有效提高性能的方式。输入图片的尺寸对检测模型的性能影响很大，在基础网络部分常常会生成比原图小数十倍的特征图，导致小物体的特征描述不容易被检测网络捕捉。通过输入更大、更多尺寸的图片进行训练，能够在一定程度上提高检测模型对物体大小的鲁棒性。 1.19’–single-cls’1parser.add_argument(&quot;--single-cls&quot;, action=&quot;store_true&quot;, help=&quot;train multi-class data as single-class&quot;) 设定训练数据集是单类别还是多类别；默认为 false多类别 1.20’–optimizer’1parser.add_argument(&quot;--optimizer&quot;, type=str, choices=[&quot;SGD&quot;, &quot;Adam&quot;, &quot;AdamW&quot;], default=&quot;SGD&quot;, help=&quot;optimizer&quot;) 选择优化器；默认为SGD，可选SGD，Adam，AdamW 1.21’–sync-bn’1parser.add_argument(&quot;--sync-bn&quot;, action=&quot;store_true&quot;, help=&quot;use SyncBatchNorm, only available in DDP mode&quot;) 是否开启跨卡同步BN；开启参数后即可使用 SyncBatchNorm多 GPU 进行分布式训练 1.22’–workers’ 最大worker数量；这里经常出问题，建议设置成0 1.23’–project’ 指定训练好的模型的保存路径；默认在runs/train 1.24’–name’ 设定保存的模型文件夹名，默认在exp； 1.25’–exist-ok’ 每次预测模型的结果是否保存在原来的文件夹；如果指定了这个参数的话，那么本次预测的结果还是保存在上一次保存的文件夹里；如果不指定就是每次预测结果保存一个新的文件夹下。 1.26’–quad’ 官方给出的开启这个功能后的实际效果： 好处是在比默认 640 大的数据集上训练效果更好 副作用是在 640 大小的数据集上训练效果可能会差一些 1.27’–cos-lr’🍀 是否开启余弦学习率； 这是我不采用cos-lr时学习率的曲线： 开启后的学习率应该是这样子： 1.28’–label-smoothing’🍀 是否对标签进行平滑处理，默认是不启用的； 在训练样本中，我们并不能保证所有sample都标注正确，如果某个样本标注错误，就可能产生负面印象，如果我们有办法“告诉”模型，样本的标签不一定正确，那么训练出来的模型对于少量的样本错误就会有“免疫力”采用随机化的标签作为训练数据时，损失函数有1-ε的概率与上面的式子相同，比如说告诉模型只有0.95概率是那个标签。 1.29’–patience’ 早停；如果模型在default值轮数里没有提升，则停止训练模型 1.30’–freeze’🍀 指定冻结层数量；可以在yolov5s.yaml中查看主干网络层数。 冻结训练是迁移学习常用的方法，当我们在使用数据量不足的情况下，通常我们会选择公共数据集提供权重作为预训练权重，我们知道网络的backbone主要是用来提取特征用的，一般大型数据集训练好的权重主干特征提取能力是比较强的，这个时候我们只需要冻结主干网络，fine-tune后面层就可以了，不需要从头开始训练，大大减少了实践而且还提高了性能。 例如如下指令，代表冻结前8层，因为只有9层，注意不要超过9 1python train.py --freeze 8 这里分享一个对比冻结效果的项目 这里是项目的部分截图 1.31’–save-period’ 用于设置多少个epoch保存一下checkpoint； 1.32’–local_rank’ DistributedDataParallel 单机多卡训练，单GPU设备不需要设置； 1.33’–entity’ 在线可视化工具，类似于tensorboard 1.34’–upload_dataset’ 是否上传dataset到wandb tabel(将数据集作为交互式 dsviz表 在浏览器中查看、查询、筛选和分析数据集) 默认False 1.35’–bbox_interval’ 设置界框图像记录间隔 Set bounding-box image logging interval for W&amp;B 默认-1 1.36’–artifact_alias’ 功能作者还未实现","link":"/2024/05/06/YOLOv5%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90/"},{"title":"ffmpeg记录","text":"ffmppeg 使用笔记 基础操作查看基本信息ffmpeg -i 压缩视频使用amd显卡加速ffmpeg -i C0072.MP4 -c:v h264_amf -preset slow -crf 20 -c:a copy out2.mp4 -crf 20 是压缩参数，建议值18-25，越低压缩越狠 更改视频中的音频编码为mp3（便于设备兼容）ffmpeg -i 2-out1.mp4 -c:v copy -c:a libmp3lame -b:a 192k 1-out2.mp4","link":"/2024/06/03/ffmpeg%E8%AE%B0%E5%BD%95/"},{"title":"ubuntu 18.04 虚拟机初始化","text":"初始化ubuntu conda环境、ssh、固定ip 安装系统安装的时候需要关闭虚拟机网络 设置固定ip编辑网络配置文件sudo vim /etc/netplan/01-network-manager-all.yaml 原始的: 1234# Let NetworkManager manage all devices on this systemnetwork: version: 2 renderer: NetworkManager 添加固定ip,ipv4网关,dns服务器地址 123456789101112# Let NetworkManager manage all devices on this systemnetwork: version: 2 renderer: NetworkManager ethernets: ens33: addresses: [192.168.10.10/24] gateway4: 192.168.10.1 dhcp4: no nameservers: addresses: [8.8.8.8,114.114.114.114] 应用配置文件sudo netplan apply 测试通断ping baidu.com ssh服务端安装安装ssh server 12sudo apt-get updatesudo apt-get install openssh-server 重启ssh服务sudo service ssh start 配置公钥将公钥写入信任文件 12cd ~/.sshcat my_key.pub &gt;&gt; authorized_keys 如此便完成了公钥的安装。此外，为了确保连接成功，输入如下指令以保证以下文件权限正确： 12chmod 600 authorized_keyschmod 700 ~/.ssh miniconda安装安装miniconda下载安装文件(之后可删除) 123mkdir minicondacd minicondawget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh 执行安装程序bash Miniconda3-latest-Linux-x86_64.sh 重启终端之后，就可以使用miniconda了。但先换源，将conda和pip的软件源修改成清华的源，下载安装软件会快很多： 1234conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --set show_channel_urls yes pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 最后一行命令在base环境下执行 取消终端自动启动base环境1conda config --set auto_activate_base false 常用命令 在 Ubuntu 上查看当前所在路径，你可以使用 pwd（print working directory）命令。只需在终端中输入以下命令并按回车：pwd","link":"/2024/06/30/ubuntu-18-04-%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%9D%E5%A7%8B%E5%8C%96/"},{"title":"ROS学习（一）","text":"ROS学习笔记 ROS初次实践启动ros小海龟123roscorerosrun turtlesim turtlesim_noderosrun turtlesim turtle_teleop_key 创建工作空间12345678mkdir -p ~/catkin_ws/srccd ~/catkin_ws/srccatkin_init_workspacesudo echo &quot;source ~/catkin_ws/setup.bash&quot; &gt;&gt; ~/.bashrcsource ~/.bashrccatkin_make 创建功能包123456cd ./srccatkin_create_pkg hellowword std_msgs rospy roscppcd..catkin_makesource ./devel/setup.sh 话题编程12345pub = rospy.Publisher( 'chatter' ,String, queue size=10)pub. publish(hello_str)rospy. Subscriber( ' chatter' ,String, callback) 服务编程12345678910ros::NodeHandle n;ros::ServiceServer service= n. advertiseservice( &quot;add two ints&quot;,add);ros::NodeHandle n;ros::ServiceClient client= n. serviceClient&lt;learningcommunication::AddTwoInts&gt;( &quot;add two ints&quot;);learning_communication::AddTwoInts srv;srv.request.a =atoll(argv[1]) ;srv.request.b =atoll(argv[2]) ; 动作编程123456789101112#客户端self._ac = actionlib.SimpleActionClient('wash_dishes', WashDishesAction)self._ac.send_goal(goal, feedback_cb=self.feedback_callback)self._ac.cancel_goal()result = self._ac.get_result()#服务端self._as = actionlib.SimpleActionServer('wash_dishes', WashDishesAction, execute_cb=self.execute_cb, auto_start=False)self._as.start() self._as.set_preempted()self._as.publish_feedback(feedback)self._as.set_succeeded(result) 关键组件launch文件通知启动多个进程,并给其添加执行参数 tf坐标变换12roslaunch turtle_tf turtle_tf_demo.launchrosrun tf view_frames QT工具箱 rviz可视化 gazebo仿真","link":"/2024/07/08/ROS%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"},{"title":"ROS学习（二）","text":"ROS学习笔记 机器人构建连接摄像头12roslaunch usb_cam usb_cam-test.launchrqt_image_view URDF/xacro建模 xacro建模可以实现部件复用以及文件引用,提高了整齐度,减少了后期模型修改的难度同时支持宏定义以及函数计算,增加了模型灵活性 这里创建了一个简单车体以及一个激光雷达 机器人仿真ArbotiX + rviz仿真12roslaunch mbot_description arbotix_with_camera_xacro.launchroslaunch mbot_teleop mbot_teleop.launch 使用了自己的四轮小车模型, 命令略有变化但是没解决odom点不随车运动. gazebo仿真环境仿真12roslaunch mbot_gazebo view_mbot_gazebo_play_ground.launchroslaunch mbot_teleop mbot_teleop.launch 传感器仿真摄像头12roslaunch mbot_gazebo view_mbot_with_camera_gazebo.launchrqt_image_view 雷达1roslaunch mbot_gazebo view_mbot_with_laser_gazebo.launch 机器人感知机器视觉ROS的图像数据123roslaunch usb_cam usb_cam-test.launchrostopic info /usb_cam/image_rawrosmsg show sensor_msgs/Image 点云: 1234roslaunch freenect_launch freenect.launchrostopic info /camera/depth_registered/pointsrosmsg show sensor_msgs/PointCloud2 摄像头标定12roslaunch robot_vision usb_cam.launchrosrun camera_calibration cameracalibrator.py --Size 8x6 --square 0.024 image:=/usb_cam/image_raw camera:=/usb_cam kinet: 123roslaunch robot_vision freenect.launchrosrun camera_calibration cameracalibrator.py image:=/camera/rgb/image_raw camera:=/camera/rgb --size 8x6 --square 0.024rosrun camera_calibration cameracalibrator.py image:=/camera/ir/image_raw camera:=/camera/ir --size 8x6 --square 0.024 .same-height { max-height: 500px; /* 期望高度 */ width: auto; /* 自动调整宽度 */ object-fit: contain; /* 确保图片比例不变形 */ margin-right: 20px; /* 图片之间的间距 */ } ROS+opencv123roslaunch robot_vision usb_cam.launchrosrun robot_vision cv_bridge_test.pyrqt_image_view 人像识别 123roslaunch robot_vision usb_cam.launchroslaunch robot_vision face_detector.launchrqt_image_view 物体跟踪 123roslaunch robot_vision usb_cam.launchroslaunch robot_vision motion_detector.launchrqt_image_view 二维码识别生成二维码 1rosrun ar_track_alvar createMarker 0 im 二维码识别(没有打印出来就没法识别) 1234roslaunch robot_vision usb_cam with_calibration.launchroslaunch robot_vision ar_track_camera.launch#查看识别到的位姿rostopic echo /ar_pose_marker 机器语音语音听写123roscorerosrun robot_voice iat_publishrostopic pub /voiceWakeup std_msgs/String &quot;data: '你好我是小爱同学'&quot; 语音合成123roscorerosrun robot_voice tts_subscriberostopic pub /voiceWords std_msgs/String &quot;data: 'hello'&quot; 语音助手1234roscorerosrun robot_voice iat_publishrosrun robot_voice voice_assistantrostopic pub /voiceWakeup std_msgs/String &quot;data: 'any string'&quot; SLAM自主导航机器人必备条件创建仿真环境 1roslaunch mbot_gazebo mbot_laser_nav_gazebo.launch SLAM功能包gamping激光雷达测试123roslaunch mbot_gazebo mbot_laser_nav_gazebo.launchroslaunch mbot_navigation gmapping_demo.launchroslaunch mbot_teleop mbot_teleop.launch 导航仿真12roslaunch mbot_gazebo mbot_laser_nav_gazebo.launchroslaunch mbot_navigation nav_cloister_demo.launch 导航SLAM仿真 12roslaunch mbot_gazebo mbot_laser_nav_gazebo.launchroslaunch mbot_navigation exploring_slam_demo.launch 自主探索 1234roscoreroslaunch mbot_gazebo mbot_laser_nav_gazebo.launchroslaunch mbot_navigation exploring_slam_demo.launchrosrun mbot_navigation exploring_slam.py 自己的四轮小车移动有问题,使用了默认的","link":"/2024/07/08/ROS%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"},{"title":"数据库上机","text":"数据库上机相关记录 Oracle首次使用创建用户(并授权)12create user nhk identified by 123456; grant connect,resource to nhk; 连接到新用户12connect nhkshow user 连接到vscode 安装插件Oracle SQL Developer Extension for VSCode 配置数据库连接:点击加号,服务名称为数据库名称,填入用户及密码 ctrl+shift+w 创建编写 SQL 查询或 PL/SQL 脚本 建议使用f5运行脚本 ctrl+enter 执行选中的语句(推荐)","link":"/2024/09/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8A%E6%9C%BA/"},{"title":"博客编写技巧","text":"记录一些博客的编写技巧 折叠代码段在md头中添加设置 123article: highlight: fold: folded eg: 图片并列排版在页面模板themes &gt; icarus &gt; source &gt; css &gt; custom.styl中添加以下代码: 123456789.same-height { max-height: 5000px; /* 图片尽量紧密排列 */ width: auto; /* 自动调整宽度 */ object-fit: contain; /* 确保图片比例不变形 */ margin-right: 20px; /* 图片之间的间距 */}.same-height:last-child { margin-right: 0; /* 最后一个图片去掉右边距 */} 默认为同一排中的图片尽量大,尽量密排列若想针对某页单独更改图片排版,在页面中加入以下代码 12345678&lt;style&gt; .same-height { max-height: 5000px; /* 期望高度 */ width: auto; /* 自动调整宽度 */ object-fit: contain; /* 确保图片比例不变形 */ margin-right: 20px; /* 图片之间的间距 */ }&lt;/style&gt; 在用户代码段中添加以下代码: 同时,设置markdown自动补齐(editor.tabCompletion)为on: 12345678910111213141516171819202122 &quot;Image Container&quot;: { &quot;prefix&quot;: &quot;img_mutiple&quot;, &quot;body&quot;: [ &quot;&lt;div style=\\&quot;display: flex; justify-content: center; align-items: center;\\&quot;&gt;&quot;, &quot; &lt;img class=\\&quot;same-height\\&quot; src=\\&quot;$1\\&quot; alt=\\&quot;\\&quot;&gt;&quot;, &quot; &lt;img class=\\&quot;same-height\\&quot; src=\\&quot;$2\\&quot; alt=\\&quot;\\&quot;&gt;&quot;, &quot;&lt;/div&gt;&quot;, &quot;&quot; ], &quot;description&quot;: &quot;Insert an image container with two images and CSS for same height.&quot; },&quot;Image single&quot;: { &quot;prefix&quot;: &quot;img_single&quot;, &quot;body&quot;: [ &quot;&lt;div style=\\&quot;display: flex; justify-content: center; \\&quot;&gt;&quot;, &quot; &lt;img style=\\&quot;max-height: 300px; width: auto; object-fit: contain; margin-right: 20px;\\&quot; src=\\&quot;$1\\&quot; alt=\\&quot;\\&quot;&gt;&quot;, &quot;&lt;/div&gt;&quot;, &quot;&quot; ], &quot;description&quot;: &quot;Insert an image container with two images and CSS for same height.&quot; } 在setting.json中插入以启用代码段预览: 1234567&quot;[markdown]&quot;:{ &quot;editor.quickSuggestions&quot;: { &quot;other&quot;: &quot;on&quot;, &quot;comments&quot;: &quot;on&quot;, &quot;strings&quot;: &quot;on&quot; }}, 图片最大为min(原始大小,能保持并列的最大值) 在添加图片时,使用img补全,或在以下代码中插入链接 1234567891011&lt;div style=&quot;display: flex; justify-content: center; align-items: center;&quot;&gt; &lt;img class=&quot;same-height&quot; src=&quot;&quot; alt=&quot;&quot;&gt; &lt;img class=&quot;same-height&quot; src=&quot;&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;display: flex; justify-content: center; align-items: center;&quot;&gt; &lt;img style=&quot;max-height: 300px; width: auto; object-fit: contain; margin-right: 20px;&quot; src=&quot;&quot; alt=&quot;&quot;&gt;&lt;/div&gt; justify-content 为水平方向对齐 ,align-items为竖直方向对齐 置顶 top值越大,越靠前","link":"/2024/09/20/%E5%8D%9A%E5%AE%A2%E7%BC%96%E5%86%99%E6%8A%80%E5%B7%A7/"},{"title":"计算机组成原理笔记","text":"计算机组成原理笔记 Chapter4 指令系统指令格式设计基本结构 操作码 源操作数/其地址or立即数：储存单元地址/寄存器编号/io端口 结果的地址：储存单元地址/寄存器编号/io端口 下条地址：通常隐含在PC中（按顺序执行时，下条地址为PC+地址长度）转移指令则跳转到给出的地址。 根据给出的地址个数，分为三、二、单、零地址指令 三：双目运算符两个源操作数地址和一个结果地址 二：双目运算符两个源操作数，其中一个作为结果地址 一：（取反/负）既是操作数地址也是结果地址 零地址：一种是无需，or栈型指令的操作数在栈顶，故不需要 指令格式设计原则 指令尽量短 足够操作码位数 指令长度是字节的整数倍 合理选择地址字段个数 指令应尽量规整 指令系统设计 完备性完整性（指令的操作类型） 兼容性（兼容以前机器的指令） 均匀性（多种数据类型eg：三种整型，两种浮点） 可扩充性（预留一定编码空间，方便扩充） 基本设计问题操作数类型 指针以及地址 数值数据 位、位串、字符以及字符串 *寻址方式 注意，一条指令若有两个或两个以上的地址码时，各地址码可采用不同的寻址方式。例如，源地址采用一种寻址方式，而目的地址采用另一种寻址方式。 立即寻址：指令直接给出操作数本身 直接寻址：指令中给出操作数的有效地址（直接/绝对地址） 间接寻址：给出操作数的地址的地址（可多重） 寄存器寻址：地址码是操作数所在寄存器编号 寄存器地址断，故寄存器寻址指令短 操作数已经在cpu，不访存，速度快 寄存器间接寻址：寄存器中存放操作数的有效地址，需要访存 变址寻址：线性表等，给出基准地址，（变址寄存器 I ）给出偏移量 把变址寄存器Rx的内容与指令中给出的形式地址A相加，形成操作数有效地址，即EA=(Rx)+A。Rx的内容称为变址值。S=((Rx)+A) 相对寻址：相对寻址是基址寻址的一种变通，由程序计数器PC提供基准地址，指令中的地址码字段作为位移量D，两者相加后得到操作数的有效地址，即 EA=(PC)+D。位移量指出的是操作数和现行指令之间的相对位置。 相对寻址方式的特点： 操作数的地址不是固定的，它随着PC值的变化而变化，并且与指令地址之间总是相差一个固定值±D。当指令地址改变时，由于其位移量不变，使得操作数与指令在可用的存储区内一起移动，所以仍能保证程序的正确执行。采用PC相对寻址方式编写的程序可在主存中任意浮动，它放在主存的任何地方，所执行的效果都是一样的。 由于指令中给出的位移量可正、可负，所以对于指令地址而言，操作数地址可能在指令地址之前或之后。 基址寻址：基址寄存器Rb的内容与指令中给出的位移量D相加，形成操作数有效地址，即EA=(Rb)+D。基址寄存器的内容称为基址值。指令的地址码字段是一个位移量，位移量可正、可负。 S=((Rb)+D) Conclution寻址方式指如何在指令中表示要访问的内存地址。表2.4列出了计算机中常用的寻址方式，其中数组mem表示存储器，数组regs表示寄存器，mem[regs[Rn]]表示由寄存器Rn的值作为存储器地址所访问的存储器值。 表 2.4: 常用寻址方式 寻址方式 格式 含义 寄存器寻址（Register） ADD R1,R2 regs[R1]=regs[R1]+regs[R2] 立即数寻址（Immediate） ADD R1,#2 regs[R1]=regs[R1]+2 偏移量寻址（Displacement） ADD R1,100(R2) regs[R1]=regs[R1]+mem[100+regs[R2]] 寄存器间接寻址（Reg.Indirect） ADD R1,(R2) regs[R1]=regs[R1]+mem[regs[R2]] 变址寻址（Indexed） ADD R1,(R2+R3) regs[R1]=regs[R1]+mem[regs[R2]+regs[R3]] 绝对寻址（Absolute） ADD R1,(100) regs[R1]=regs[R1]+mem[100] 存储器间接寻址（Mem.Indirect） ADD R1,@(R2) regs[R1]=regs[R1]+mem[mem[regs[R2]]] 自增量寻址（Autoincrement） ADD R1,(R2)+ regs[R1]=regs[R1]+mem[regs[R2]],regs[R2]=regs[R2]+d 自减量寻址（Autodecrement） ADD R1,-(R2) regs[R2]=regs[R2]-d,regs[R1]=regs[R1]+mem[regs[R2]] 比例变址寻址（Scaled） ADD R1,100(R2)(R3) *regs[R1]=regs[R1]+mem[100+regs[R2]+regs[R3]d] 操作类型 算数和逻辑运算指令：加减乘除/比较/加一减一/位运算 移位指令 传送指令 串指令 顺序控制指令：转移、跳转、跳步、调用、返回 CPU控制指令 输入输出指令 操作码编码 定长操作码编码： 长度固定，译码方便，执行指令速度快，但有信息冗余。 扩展操作码编码： 几种固定长度的格式，4-8-12，3-6-9等，多用于非规整性指令集 异常以及中断处理异常 exception：也称为例外，执行时cpu内部发生的。 故障：遇到终止程序执行。 自陷：人为埋设，例如断点、单步追踪，处理结束返回下条继续执行。 终止：特殊事件，每条指令执行完都检查有无中断指令，有则将 下条指令作为断点保存，并转到相应断点服务执行，结束后返回断点继续。 终止与指令执行无关，由CPU外部的I/O部件通过专门的中断请求线向CPU请求 程序的机器级表示略","link":"/2024/04/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"aira2","slug":"aira2","link":"/tags/aira2/"},{"name":"刷机","slug":"刷机","link":"/tags/%E5%88%B7%E6%9C%BA/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"LLM","slug":"LLM","link":"/tags/LLM/"},{"name":"AI","slug":"AI","link":"/tags/AI/"},{"name":"GPT","slug":"GPT","link":"/tags/GPT/"},{"name":"环境配置","slug":"环境配置","link":"/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"name":"cpp","slug":"cpp","link":"/tags/cpp/"},{"name":"stl","slug":"stl","link":"/tags/stl/"},{"name":"algorithm","slug":"algorithm","link":"/tags/algorithm/"},{"name":"verilog","slug":"verilog","link":"/tags/verilog/"},{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"破解软件","slug":"破解软件","link":"/tags/%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"Icarus","slug":"Icarus","link":"/tags/Icarus/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"codespace","slug":"codespace","link":"/tags/codespace/"},{"name":"quartus","slug":"quartus","link":"/tags/quartus/"},{"name":"modelsim","slug":"modelsim","link":"/tags/modelsim/"},{"name":"c++","slug":"c","link":"/tags/c/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"计算机组成原理","slug":"计算机组成原理","link":"/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"},{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"},{"name":"ubuntu","slug":"ubuntu","link":"/tags/ubuntu/"},{"name":"ffmpeg","slug":"ffmpeg","link":"/tags/ffmpeg/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"ros","slug":"ros","link":"/tags/ros/"},{"name":"数据库","slug":"数据库","link":"/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Oracle","slug":"Oracle","link":"/tags/Oracle/"}],"categories":[{"name":"数据库学习笔记","slug":"数据库学习笔记","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"博客编写记录","slug":"博客编写记录","link":"/categories/%E5%8D%9A%E5%AE%A2%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/"}],"pages":[{"title":"","text":"月色真美,风也温柔 body { /*背景图片URL 可使用随机图片API */ background-image: url(\"https://picstorage.212676.xyz/imgs/20240310142123.webp\"); } .photo-bg { /* 卡片左侧图片 */ background-image: url(\"https://picstorage.212676.xyz/imgs/bafybeigqhq6nqzl6muoi7qe4obmknjlkqkhneell6xniiezvujvilhglzm.png\"); } // 音乐设置 let meting_music_api = \"https://api.mizore.cn/meting/api.php\";// meting api let music_server = \"netease\"; // 音乐服务：网易云 netease 参见 meting api支持的服务 let music_type = \"playlist\"; // 歌曲类型：歌单playlist 单首歌曲 song 专辑 album let music_id = \"20173709\"; // 歌单ID或歌曲ID或者专辑ID 20173709 29732992 let music_order = \"random\"; // 音频循环顺序, 顺序播放： 'list', 随机播放：'random' let music_mini = false; // mini模式 吸底模式开启后此选项实效 true / false let music_fixed = false; // 吸底模式 let music_volume = 0.7; // 默认音量 let music_autoplay = false; // 自动播放 let music_loop = \"all\"; // 音频循环播放, 可选值: 'all', 'one', 'none' ，分别为全部循环，单曲循环，不循环 // TODO 一言设置 Wellcome 很荣幸您能访问我的网站！ :D 获取中... Blog GitHub Send a Mail Copyright 2024 Daniel Niu Mod by Niuhk","link":"/AboutMe/index.html"},{"title":"","text":"uR6a-qQKdcarXijDktDLhFYQ3bPbyD1xxWCvJsMUKVs3pNDWhfZr24bFVRf9rAPDJb608HP534ykD0Z0ufysuwMGkRfexHY sourcechatcodingsaltskiptellphone 6777bf2e4fcb859b9a6cead38065d00c0ce226a1","link":"/pwd/index.html"},{"title":"HomePage","text":"","link":"/HomePage/index.html"},{"title":"","text":"","link":"/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"","text":".aplayer{background:#fff;font-family:Arial,Helvetica,sans-serif;margin:5px;box-shadow:0 2px 2px 0 rgba(0,0,0,.07),0 1px 5px 0 rgba(0,0,0,.1);border-radius:2px;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;line-height:normal;position:relative}.aplayer *{box-sizing:content-box}.aplayer svg{width:100%;height:100%}.aplayer svg circle,.aplayer svg path{fill:#fff}.aplayer.aplayer-withlist .aplayer-info{border-bottom:1px solid #e9e9e9}.aplayer.aplayer-withlist .aplayer-list{display:block}.aplayer.aplayer-withlist .aplayer-icon-order,.aplayer.aplayer-withlist .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu{display:inline}.aplayer.aplayer-withlrc .aplayer-pic{height:90px;width:90px}.aplayer.aplayer-withlrc .aplayer-info{margin-left:90px;height:90px;padding:10px 7px 0}.aplayer.aplayer-withlrc .aplayer-lrc{display:block}.aplayer.aplayer-narrow{width:66px}.aplayer.aplayer-narrow .aplayer-info,.aplayer.aplayer-narrow .aplayer-list{display:none}.aplayer.aplayer-narrow .aplayer-body,.aplayer.aplayer-narrow .aplayer-pic{height:66px;width:66px}.aplayer.aplayer-fixed{position:fixed;bottom:0;left:0;right:0;margin:0;z-index:99;overflow:visible;max-width:400px;box-shadow:none}.aplayer.aplayer-fixed .aplayer-list{margin-bottom:65px;border:1px solid #eee;border-bottom:none}.aplayer.aplayer-fixed .aplayer-body{position:fixed;bottom:0;left:0;right:0;margin:0;z-index:99;background:#fff;padding-right:18px;transition:all .3s ease;max-width:400px}.aplayer.aplayer-fixed .aplayer-lrc{display:block;position:fixed;bottom:10px;left:0;right:0;margin:0;z-index:98;pointer-events:none;text-shadow:-1px -1px 0 #fff}.aplayer.aplayer-fixed .aplayer-lrc:after,.aplayer.aplayer-fixed .aplayer-lrc:before{display:none}.aplayer.aplayer-fixed .aplayer-info{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:0 0;transform-origin:0 0;transition:all .3s ease;border-bottom:none;border-top:1px solid #e9e9e9}.aplayer.aplayer-fixed .aplayer-info .aplayer-music{width:calc(100% - 105px)}.aplayer.aplayer-fixed .aplayer-miniswitcher{display:block}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-info{display:block;-webkit-transform:scaleX(0);transform:scaleX(0)}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body{width:66px!important}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-miniswitcher .aplayer-icon{-webkit-transform:rotateY(0);transform:rotateY(0)}.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-lrc,.aplayer.aplayer-fixed .aplayer-icon-play{display:inline-block}.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-menu,.aplayer.aplayer-fixed .aplayer-icon-play{position:absolute;bottom:27px;width:20px;height:20px}.aplayer.aplayer-fixed .aplayer-icon-back{right:75px}.aplayer.aplayer-fixed .aplayer-icon-play{right:50px}.aplayer.aplayer-fixed .aplayer-icon-forward{right:25px}.aplayer.aplayer-fixed .aplayer-icon-menu{right:0}.aplayer.aplayer-arrow .aplayer-icon-loop,.aplayer.aplayer-arrow .aplayer-icon-order,.aplayer.aplayer-mobile .aplayer-icon-volume-down{display:none}.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-loading-icon{display:block}.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb{-webkit-transform:scale(1);transform:scale(1)}.aplayer .aplayer-body{position:relative}.aplayer .aplayer-icon{width:15px;height:15px;border:none;background-color:transparent;outline:none;cursor:pointer;opacity:.8;vertical-align:middle;padding:0;font-size:12px;margin:0;display:inline-block}.aplayer .aplayer-icon path{transition:all .2s ease-in-out}.aplayer .aplayer-icon-back,.aplayer .aplayer-icon-forward,.aplayer .aplayer-icon-lrc,.aplayer .aplayer-icon-order,.aplayer .aplayer-icon-play{display:none}.aplayer .aplayer-icon-lrc-inactivity svg{opacity:.4}.aplayer .aplayer-icon-forward{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.aplayer .aplayer-lrc-content{display:none}.aplayer .aplayer-pic{position:relative;float:left;height:66px;width:66px;background-size:cover;background-position:50%;transition:all .3s ease;cursor:pointer}.aplayer .aplayer-pic:hover .aplayer-button{opacity:1}.aplayer .aplayer-pic .aplayer-button{position:absolute;border-radius:50%;opacity:.8;text-shadow:0 1px 1px rgba(0,0,0,.2);box-shadow:0 1px 1px rgba(0,0,0,.2);background:rgba(0,0,0,.2);transition:all .1s ease}.aplayer .aplayer-pic .aplayer-button path{fill:#fff}.aplayer .aplayer-pic .aplayer-hide{display:none}.aplayer .aplayer-pic .aplayer-play{width:26px;height:26px;border:2px solid #fff;bottom:50%;right:50%;margin:0 -15px -15px 0}.aplayer .aplayer-pic .aplayer-play svg{position:absolute;top:3px;left:4px;height:20px;width:20px}.aplayer .aplayer-pic .aplayer-pause{width:16px;height:16px;border:2px solid #fff;bottom:4px;right:4px}.aplayer .aplayer-pic .aplayer-pause svg{position:absolute;top:2px;left:2px;height:12px;width:12px}.aplayer .aplayer-info{margin-left:66px;padding:14px 7px 0 10px;height:66px;box-sizing:border-box}.aplayer .aplayer-info .aplayer-music{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin:0 0 13px 5px;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:default;padding-bottom:2px;height:20px}.aplayer .aplayer-info .aplayer-music .aplayer-title{font-size:14px}.aplayer .aplayer-info .aplayer-music .aplayer-author{font-size:12px;color:#666}.aplayer .aplayer-info .aplayer-controller{position:relative;display:flex}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap{margin:0 0 0 5px;padding:4px 0;cursor:pointer!important;flex:1}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap:hover .aplayer-bar .aplayer-played .aplayer-thumb{-webkit-transform:scale(1);transform:scale(1)}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar{position:relative;height:2px;width:100%;background:#cdcdcd}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-loaded{position:absolute;left:0;top:0;bottom:0;background:#aaa;height:2px;transition:all .5s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played{position:absolute;left:0;top:0;bottom:0;height:2px}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb{position:absolute;top:0;right:5px;margin-top:-4px;margin-right:-10px;height:10px;width:10px;border-radius:50%;cursor:pointer;transition:all .3s ease-in-out;-webkit-transform:scale(0);transform:scale(0)}.aplayer .aplayer-info .aplayer-controller .aplayer-time{position:relative;right:0;bottom:4px;height:17px;color:#999;font-size:11px;padding-left:7px}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-time-inner{vertical-align:middle}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon{cursor:pointer;transition:all .2s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#666}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-loop{margin-right:2px}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon:hover path{fill:#000}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-mode{display:none}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap{position:relative;display:inline-block;margin-left:3px;cursor:pointer!important}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap:hover .aplayer-volume-bar-wrap{height:40px}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap{position:absolute;bottom:15px;right:-3px;width:25px;height:0;z-index:99;overflow:hidden;transition:all .2s ease-in-out}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap.aplayer-volume-bar-wrap-active{height:40px}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar{position:absolute;bottom:0;right:10px;width:5px;height:35px;background:#aaa;border-radius:2.5px;overflow:hidden}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar .aplayer-volume{position:absolute;bottom:0;right:0;width:5px;transition:all .1s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon{display:none}.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon svg{position:absolute;-webkit-animation:rotate 1s linear infinite;animation:rotate 1s linear infinite}.aplayer .aplayer-lrc{display:none;position:relative;height:30px;text-align:center;overflow:hidden;margin:-10px 0 7px}.aplayer .aplayer-lrc:before{top:0;height:10%;background:linear-gradient(180deg,#fff 0,hsla(0,0%,100%,0));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ffffff\",endColorstr=\"#00ffffff\",GradientType=0)}.aplayer .aplayer-lrc:after,.aplayer .aplayer-lrc:before{position:absolute;z-index:1;display:block;overflow:hidden;width:100%;content:\" \"}.aplayer .aplayer-lrc:after{bottom:0;height:33%;background:linear-gradient(180deg,hsla(0,0%,100%,0) 0,hsla(0,0%,100%,.8));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#00ffffff\",endColorstr=\"#ccffffff\",GradientType=0)}.aplayer .aplayer-lrc p{font-size:12px;color:#666;line-height:16px!important;height:16px!important;padding:0!important;margin:0!important;transition:all .5s ease-out;opacity:.4;overflow:hidden}.aplayer .aplayer-lrc p.aplayer-lrc-current{opacity:1;overflow:visible;height:auto!important;min-height:16px}.aplayer .aplayer-lrc.aplayer-lrc-hide{display:none}.aplayer .aplayer-lrc .aplayer-lrc-contents{width:100%;transition:all .5s ease-out;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:default}.aplayer .aplayer-list{overflow:auto;transition:all .5s ease;will-change:height;display:none;overflow:hidden}.aplayer .aplayer-list.aplayer-list-hide{max-height:0!important}.aplayer .aplayer-list ol{list-style-type:none;margin:0;padding:0;overflow-y:auto}.aplayer .aplayer-list ol::-webkit-scrollbar{width:5px}.aplayer .aplayer-list ol::-webkit-scrollbar-thumb{border-radius:3px;background-color:#eee}.aplayer .aplayer-list ol::-webkit-scrollbar-thumb:hover{background-color:#ccc}.aplayer .aplayer-list ol li{position:relative;height:32px;line-height:32px;padding:0 15px;font-size:12px;border-top:1px solid #e9e9e9;cursor:pointer;transition:all .2s ease;overflow:hidden;margin:0}.aplayer .aplayer-list ol li:first-child{border-top:none}.aplayer .aplayer-list ol li:hover{background:#efefef}.aplayer .aplayer-list ol li.aplayer-list-light{background:#e9e9e9}.aplayer .aplayer-list ol li.aplayer-list-light .aplayer-list-cur{display:inline-block}.aplayer .aplayer-list ol li .aplayer-list-cur{display:none;width:3px;height:22px;position:absolute;left:0;top:5px;cursor:pointer}.aplayer .aplayer-list ol li .aplayer-list-index{color:#666;margin-right:12px;cursor:pointer}.aplayer .aplayer-list ol li .aplayer-list-author{color:#666;float:right;cursor:pointer}.aplayer .aplayer-notice{opacity:0;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:12px;border-radius:4px;padding:5px 10px;transition:all .3s ease-in-out;overflow:hidden;color:#fff;pointer-events:none;background-color:#f4f4f5;color:#909399}.aplayer .aplayer-miniswitcher{display:none;position:absolute;top:0;right:0;bottom:0;height:100%;background:#e6e6e6;width:18px;border-radius:0 2px 2px 0}.aplayer .aplayer-miniswitcher .aplayer-icon{height:100%;width:100%;-webkit-transform:rotateY(180deg);transform:rotateY(180deg);transition:all .3s ease}.aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#666}.aplayer .aplayer-miniswitcher .aplayer-icon:hover path{fill:#000}@-webkit-keyframes aplayer-roll{0%{left:0}to{left:-100%}}@keyframes aplayer-roll{0%{left:0}to{left:-100%}}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}} /*# sourceMappingURL=APlayer.min.css.map*/","link":"/AboutMe/static/APlayer-1.10.1/dist/APlayer.min.css"},{"title":"","text":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"APlayer\",[],t):\"object\"==typeof exports?exports.APlayer=t():e.APlayer=t()}(window,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},n.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/\",n(n.s=41)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=/mobile/i.test(window.navigator.userAgent),a={secondToTime:function(e){var t=Math.floor(e/3600),n=Math.floor((e-3600*t)/60),i=Math.floor(e-3600*t-60*n);return(t>0?[t,n,i]:[n,i]).map(function(e){return e=0;t--){var n=Math.floor(Math.random()*(t+1)),i=e[n];e[n]=e[t],e[t]=i}return e}([].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);ti?t:e+(t-e)*((a=n/i)n?\"function\"==typeof i&&i(t):l(u)}()},n=function(e){if(!e.defaultPrevented){e.preventDefault(),location.hash!==this.hash&&window.history.pushState(null,null,this.hash);var n=document.getElementById(this.hash.substring(1));if(!n)return;t(n,500,function(e){location.replace(\"#\"+e.id)})}};return document.addEventListener(\"DOMContentLoaded\",function(){for(var e,t=document.querySelectorAll('a[href^=\"#\"]:not([href=\"#\"])'),i=t.length;e=t[--i];)e.addEventListener(\"click\",n,!1)}),t}})?i.call(t,n,t,e):i)||(e.exports=a)},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function e(e,t){for(var n=0;n1),n=0===this.audios.length;this.player.template.listOl.innerHTML+=(0,a.default)({theme:this.player.options.theme,audio:e,index:this.audios.length+1}),this.audios=this.audios.concat(e),t&&this.audios.length>1&&this.player.container.classList.add(\"aplayer-withlist\"),this.player.randomOrder=r.default.randomOrder(this.audios.length),this.player.template.listCurs=this.player.container.querySelectorAll(\".aplayer-list-cur\"),this.player.template.listCurs[this.audios.length-1].style.backgroundColor=e.theme||this.player.options.theme,n&&(\"random\"===this.player.options.order?this.switch(this.player.randomOrder[0]):this.switch(0))}},{key:\"remove\",value:function(e){if(this.player.events.trigger(\"listremove\",{index:e}),this.audios[e])if(this.audios.length>1){var t=this.player.container.querySelectorAll(\".aplayer-list li\");t[e].remove(),this.audios.splice(e,1),this.player.lrc&&this.player.lrc.remove(e),e===this.index&&(this.audios[e]?this.switch(e):this.switch(e-1)),this.index>e&&this.index--;for(var n=e;n","link":"/AboutMe/static/APlayer-1.10.1/dist/APlayer.min.js"},{"title":"","text":"/*! layer-v3.5.1 Web 通用弹出层组件 MIT License */ ;!function(e,t){\"use strict\";var i,n,a=e.layui&&layui.define,o={getPath:function(){var t=document.currentScript?document.currentScript.src:function(){for(var e,t=document.scripts,i=t.length-1,n=i;n>0;n--)if(\"interactive\"===t[n].readyState){e=t[n].src;break}return e||t[i].src}(),i=e.LAYUI_GLOBAL||{};return i.layer_dir||t.substring(0,t.lastIndexOf(\"/\")+1)}(),config:{},end:{},minIndex:0,minLeft:[],btn:[\"确定\",\"取消\"],type:[\"dialog\",\"page\",\"iframe\",\"loading\",\"tips\"],getStyle:function(t,i){var n=t.currentStyle?t.currentStyle:e.getComputedStyle(t,null);return n[n.getPropertyValue?\"getPropertyValue\":\"getAttribute\"](i)},link:function(t,i,n){if(r.path){var a=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"link\");\"string\"==typeof i&&(n=i);var l=(n||t).replace(/\\.|\\//g,\"\"),f=\"layuicss-\"+l,c=\"creating\",u=0;s.rel=\"stylesheet\",s.href=r.path+t,s.id=f,document.getElementById(f)||a.appendChild(s),\"function\"==typeof i&&!function d(t){var n=100,a=document.getElementById(f);return++u>1e4/n?e.console&&console.error(l+\".css: Invalid\"):void(1989===parseInt(o.getStyle(a,\"width\"))?(t===c&&a.removeAttribute(\"lay-status\"),a.getAttribute(\"lay-status\")===c?setTimeout(d,n):i()):(a.setAttribute(\"lay-status\",c),setTimeout(function(){d(c)},n)))}()}}},r={v:\"3.5.1\",ie:function(){var t=navigator.userAgent.toLowerCase();return!!(e.ActiveXObject||\"ActiveXObject\"in e)&&((t.match(/msie\\s(\\d+)/)||[])[1]||\"11\")}(),index:e.layer&&e.layer.v?1e5:0,path:o.getPath,config:function(e,t){return e=e||{},r.cache=o.config=i.extend({},o.config,e),r.path=o.config.path||r.path,\"string\"==typeof e.extend&&(e.extend=[e.extend]),o.config.path&&r.ready(),e.extend?(a?layui.addcss(\"modules/layer/\"+e.extend):o.link(\"theme/\"+e.extend),this):this},ready:function(e){var t=\"layer\",i=\"\",n=(a?\"modules/layer/\":\"theme/\")+\"default/layer.css?v=\"+r.v+i;return a?layui.addcss(n,e,t):o.link(n,e,t),this},alert:function(e,t,n){var a=\"function\"==typeof t;return a&&(n=t),r.open(i.extend({content:e,yes:n},a?{}:t))},confirm:function(e,t,n,a){var s=\"function\"==typeof t;return s&&(a=n,n=t),r.open(i.extend({content:e,btn:o.btn,yes:n,btn2:a},s?{}:t))},msg:function(e,n,a){var s=\"function\"==typeof n,f=o.config.skin,c=(f?f+\" \"+f+\"-msg\":\"\")||\"layui-layer-msg\",u=l.anim.length-1;return s&&(a=n),r.open(i.extend({content:e,time:3e3,shade:!1,skin:c,title:!1,closeBtn:!1,btn:!1,resize:!1,end:a},s&&!o.config.skin?{skin:c+\" layui-layer-hui\",anim:u}:function(){return n=n||{},(n.icon===-1||n.icon===t&&!o.config.skin)&&(n.skin=c+\" \"+(n.skin||\"layui-layer-hui\")),n}()))},load:function(e,t){return r.open(i.extend({type:3,icon:e||0,resize:!1,shade:.01},t))},tips:function(e,t,n){return r.open(i.extend({type:4,content:[e,t],closeBtn:!1,time:3e3,shade:!1,resize:!1,fixed:!1,maxWidth:260},n))}},s=function(e){var t=this,a=function(){t.creat()};t.index=++r.index,t.config.maxWidth=i(n).width()-30,t.config=i.extend({},t.config,o.config,e),document.body?a():setTimeout(function(){a()},30)};s.pt=s.prototype;var l=[\"layui-layer\",\".layui-layer-title\",\".layui-layer-main\",\".layui-layer-dialog\",\"layui-layer-iframe\",\"layui-layer-content\",\"layui-layer-btn\",\"layui-layer-close\"];l.anim=[\"layer-anim-00\",\"layer-anim-01\",\"layer-anim-02\",\"layer-anim-03\",\"layer-anim-04\",\"layer-anim-05\",\"layer-anim-06\"],l.SHADE=\"layui-layer-shade\",l.MOVE=\"layui-layer-move\",s.pt.config={type:0,shade:.3,fixed:!0,move:l[1],title:\"信息\",offset:\"auto\",area:\"auto\",closeBtn:1,time:0,zIndex:19891014,maxWidth:360,anim:0,isOutAnim:!0,minStack:!0,icon:-1,moveType:1,resize:!0,scrollbar:!0,tips:2},s.pt.vessel=function(e,t){var n=this,a=n.index,r=n.config,s=r.zIndex+a,f=\"object\"==typeof r.title,c=r.maxmin&&(1===r.type||2===r.type),u=r.title?''+(f?r.title[0]:r.title)+\"\":\"\";return r.zIndex=s,t([r.shade?'':\"\",''+(e&&2!=r.type?\"\":u)+''+(0==r.type&&r.icon!==-1?'':\"\")+(1==r.type&&e?\"\":r.content||\"\")+''+function(){var e=c?'':\"\";return r.closeBtn&&(e+=''),e}()+\"\"+(r.btn?function(){var e=\"\";\"string\"==typeof r.btn&&(r.btn=[r.btn]);for(var t=0,i=r.btn.length;t0&&o.outerHeight()>a.maxHeight?(s[1]=a.maxHeight,u(\".\"+l[5])):a.fixed&&s[1]>=n.height()&&(s[1]=n.height(),u(\".\"+l[5])):u(\".\"+l[5])}return t},s.pt.offset=function(){var e=this,t=e.config,i=e.layero,a=[i.outerWidth(),i.outerHeight()],o=\"object\"==typeof t.offset;e.offsetTop=(n.height()-a[1])/2,e.offsetLeft=(n.width()-a[0])/2,o?(e.offsetTop=t.offset[0],e.offsetLeft=t.offset[1]||e.offsetLeft):\"auto\"!==t.offset&&(\"t\"===t.offset?e.offsetTop=0:\"r\"===t.offset?e.offsetLeft=n.width()-a[0]:\"b\"===t.offset?e.offsetTop=n.height()-a[1]:\"l\"===t.offset?e.offsetLeft=0:\"lt\"===t.offset?(e.offsetTop=0,e.offsetLeft=0):\"lb\"===t.offset?(e.offsetTop=n.height()-a[1],e.offsetLeft=0):\"rt\"===t.offset?(e.offsetTop=0,e.offsetLeft=n.width()-a[0]):\"rb\"===t.offset?(e.offsetTop=n.height()-a[1],e.offsetLeft=n.width()-a[0]):e.offsetTop=t.offset),t.fixed||(e.offsetTop=/%$/.test(e.offsetTop)?n.height()*parseFloat(e.offsetTop)/100:parseFloat(e.offsetTop),e.offsetLeft=/%$/.test(e.offsetLeft)?n.width()*parseFloat(e.offsetLeft)/100:parseFloat(e.offsetLeft),e.offsetTop+=n.scrollTop(),e.offsetLeft+=n.scrollLeft()),i.attr(\"minLeft\")&&(e.offsetTop=n.height()-(i.find(l[1]).outerHeight()||0),e.offsetLeft=i.css(\"left\")),i.css({top:e.offsetTop,left:e.offsetLeft})},s.pt.tips=function(){var e=this,t=e.config,a=e.layero,o=[a.outerWidth(),a.outerHeight()],r=i(t.follow);r[0]||(r=i(\"body\"));var s={width:r.outerWidth(),height:r.outerHeight(),top:r.offset().top,left:r.offset().left},f=a.find(\".layui-layer-TipsG\"),c=t.tips[0];t.tips[1]||f.remove(),s.autoLeft=function(){s.left+o[0]-n.width()>0?(s.tipLeft=s.left+s.width-o[0],f.css({right:12,left:\"auto\"})):s.tipLeft=s.left},s.where=[function(){s.autoLeft(),s.tipTop=s.top-o[1]-10,f.removeClass(\"layui-layer-TipsB\").addClass(\"layui-layer-TipsT\").css(\"border-right-color\",t.tips[1])},function(){s.tipLeft=s.left+s.width+10,s.tipTop=s.top,f.removeClass(\"layui-layer-TipsL\").addClass(\"layui-layer-TipsR\").css(\"border-bottom-color\",t.tips[1])},function(){s.autoLeft(),s.tipTop=s.top+s.height+10,f.removeClass(\"layui-layer-TipsT\").addClass(\"layui-layer-TipsB\").css(\"border-right-color\",t.tips[1])},function(){s.tipLeft=s.left-o[0]-10,s.tipTop=s.top,f.removeClass(\"layui-layer-TipsR\").addClass(\"layui-layer-TipsL\").css(\"border-bottom-color\",t.tips[1])}],s.where[c-1](),1===c?s.top-(n.scrollTop()+o[1]+16)0||s.where[3]():3===c?s.top-n.scrollTop()+s.height+o[1]+16-n.height()>0&&s.where[0]():4===c&&o[0]+16-s.left>0&&s.where[1](),a.find(\".\"+l[5]).css({\"background-color\":t.tips[1],\"padding-right\":t.closeBtn?\"30px\":\"\"}),a.css({left:s.tipLeft-(t.fixed?n.scrollLeft():0),top:s.tipTop-(t.fixed?n.scrollTop():0)})},s.pt.move=function(){var e=this,t=e.config,a=i(document),s=e.layero,l=s.find(t.move),f=s.find(\".layui-layer-resize\"),c={};return t.move&&l.css(\"cursor\",\"move\"),l.on(\"mousedown\",function(e){e.preventDefault(),t.move&&(c.moveStart=!0,c.offset=[e.clientX-parseFloat(s.css(\"left\")),e.clientY-parseFloat(s.css(\"top\"))],o.moveElem.css(\"cursor\",\"move\").show())}),f.on(\"mousedown\",function(e){e.preventDefault(),c.resizeStart=!0,c.offset=[e.clientX,e.clientY],c.area=[s.outerWidth(),s.outerHeight()],o.moveElem.css(\"cursor\",\"se-resize\").show()}),a.on(\"mousemove\",function(i){if(c.moveStart){var a=i.clientX-c.offset[0],o=i.clientY-c.offset[1],l=\"fixed\"===s.css(\"position\");if(i.preventDefault(),c.stX=l?0:n.scrollLeft(),c.stY=l?0:n.scrollTop(),!t.moveOut){var f=n.width()-s.outerWidth()+c.stX,u=n.height()-s.outerHeight()+c.stY;af&&(a=f),ou&&(o=u)}s.css({left:a,top:o})}if(t.resize&&c.resizeStart){var a=i.clientX-c.offset[0],o=i.clientY-c.offset[1];i.preventDefault(),r.style(e.index,{width:c.area[0]+a,height:c.area[1]+o}),c.isResize=!0,t.resizing&&t.resizing(s)}}).on(\"mouseup\",function(e){c.moveStart&&(delete c.moveStart,o.moveElem.hide(),t.moveEnd&&t.moveEnd(s)),c.resizeStart&&(delete c.resizeStart,o.moveElem.hide())}),e},s.pt.callback=function(){function e(){var e=a.cancel&&a.cancel(t.index,n);e===!1||r.close(t.index)}var t=this,n=t.layero,a=t.config;t.openLayer(),a.success&&(2==a.type?n.find(\"iframe\").on(\"load\",function(){a.success(n,t.index)}):a.success(n,t.index)),6==r.ie&&t.IE6(n),n.find(\".\"+l[6]).children(\"a\").on(\"click\",function(){var e=i(this).index();if(0===e)a.yes?a.yes(t.index,n):a.btn1?a.btn1(t.index,n):r.close(t.index);else{var o=a[\"btn\"+(e+1)]&&a[\"btn\"+(e+1)](t.index,n);o===!1||r.close(t.index)}}),n.find(\".\"+l[7]).on(\"click\",e),a.shadeClose&&t.shadeo.on(\"click\",function(){r.close(t.index)}),n.find(\".layui-layer-min\").on(\"click\",function(){var e=a.min&&a.min(n,t.index);e===!1||r.min(t.index,a)}),n.find(\".layui-layer-max\").on(\"click\",function(){i(this).hasClass(\"layui-layer-maxmin\")?(r.restore(t.index),a.restore&&a.restore(n,t.index)):(r.full(t.index,a),setTimeout(function(){a.full&&a.full(n,t.index)},100))}),a.end&&(o.end[t.index]=a.end)},o.reselect=function(){i.each(i(\"select\"),function(e,t){var n=i(this);n.parents(\".\"+l[0])[0]||1==n.attr(\"layer\")&&i(\".\"+l[0]).length","link":"/AboutMe/static/layer-v3.5.1/layer/layer.js"},{"title":"","text":"/*! layer mobile-v2.0.0 Web 通用弹出层组件 MIT License */ ;!function(e){\"use strict\";var t=document,n=\"querySelectorAll\",i=\"getElementsByClassName\",a=function(e){return t[n](e)},s={type:0,shade:!0,shadeClose:!0,fixed:!0,anim:\"scale\"},l={extend:function(e){var t=JSON.parse(JSON.stringify(s));for(var n in e)t[n]=e[n];return t},timer:{},end:{}};l.touch=function(e,t){e.addEventListener(\"click\",function(e){t.call(this,e)},!1)};var r=0,o=[\"layui-m-layer\"],c=function(e){var t=this;t.config=l.extend(e),t.view()};c.prototype.view=function(){var e=this,n=e.config,s=t.createElement(\"div\");e.id=s.id=o[0]+r,s.setAttribute(\"class\",o[0]+\" \"+o[0]+(n.type||0)),s.setAttribute(\"index\",r);var l=function(){var e=\"object\"==typeof n.title;return n.title?''+(e?n.title[0]:n.title)+\"\":\"\"}(),c=function(){\"string\"==typeof n.btn&&(n.btn=[n.btn]);var e,t=(n.btn||[]).length;return 0!==t&&n.btn?(e=''+n.btn[0]+\"\",2===t&&(e=''+n.btn[1]+\"\"+e),''+e+\"\"):\"\"}();if(n.fixed||(n.top=n.hasOwnProperty(\"top\")?n.top:100,n.style=n.style||\"\",n.style+=\" top:\"+(t.body.scrollTop+n.top)+\"px\"),2===n.type&&(n.content=''+(n.content||\"\")+\"\"),n.skin&&(n.anim=\"up\"),\"msg\"===n.skin&&(n.shade=!1),s.innerHTML=(n.shade?\"\"+l+''+n.content+\"\"+c+\"\",!n.type||2===n.type){var d=t[i](o[0]+n.type),y=d.length;y>=1&&layer.close(d[0].getAttribute(\"index\"))}document.body.appendChild(s);var u=e.elem=a(\"#\"+e.id)[0];n.success&&n.success(u),e.index=r++,e.action(n,u)},c.prototype.action=function(e,t){var n=this;e.time&&(l.timer[n.index]=setTimeout(function(){layer.close(n.index)},1e3*e.time));var a=function(){var t=this.getAttribute(\"type\");0==t?(e.no&&e.no(),layer.close(n.index)):e.yes?e.yes(n.index):layer.close(n.index)};if(e.btn)for(var s=t[i](\"layui-m-layerbtn\")[0].children,r=s.length,o=0;o","link":"/AboutMe/static/layer-v3.5.1/layer/mobile/layer.js"},{"title":"","text":".layui-layer-imgbar,.layui-layer-imgtit a,.layui-layer-tab .layui-layer-title span,.layui-layer-title{text-overflow:ellipsis;white-space:nowrap}html #layuicss-layer{display:none;position:absolute;width:1989px}.layui-layer,.layui-layer-shade{position:fixed;_position:absolute;pointer-events:auto}.layui-layer-shade{top:0;left:0;width:100%;height:100%;_height:expression(document.body.offsetHeight+\"px\")}.layui-layer{-webkit-overflow-scrolling:touch;top:150px;left:0;margin:0;padding:0;background-color:#fff;-webkit-background-clip:content;border-radius:2px;box-shadow:1px 1px 50px rgba(0,0,0,.3)}.layui-layer-close{position:absolute}.layui-layer-content{position:relative}.layui-layer-border{border:1px solid #B2B2B2;border:1px solid rgba(0,0,0,.1);box-shadow:1px 1px 5px rgba(0,0,0,.2)}.layui-layer-load{background:url(loading-1.gif) center center no-repeat #eee}.layui-layer-ico{background:url(icon.png) no-repeat}.layui-layer-btn a,.layui-layer-dialog .layui-layer-ico,.layui-layer-setwin a{display:inline-block;*display:inline;*zoom:1;vertical-align:top}.layui-layer-move{display:none;position:fixed;*position:absolute;left:0;top:0;width:100%;height:100%;cursor:move;opacity:0;filter:alpha(opacity=0);background-color:#fff;z-index:2147483647}.layui-layer-resize{position:absolute;width:15px;height:15px;right:0;bottom:0;cursor:se-resize}.layer-anim{-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:.3s;animation-duration:.3s}@-webkit-keyframes layer-bounceIn{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes layer-bounceIn{0%{opacity:0;-webkit-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5)}100%{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.layer-anim-00{-webkit-animation-name:layer-bounceIn;animation-name:layer-bounceIn}@-webkit-keyframes layer-zoomInDown{0%{opacity:0;-webkit-transform:scale(.1) translateY(-2000px);transform:scale(.1) translateY(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateY(60px);transform:scale(.475) translateY(60px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes layer-zoomInDown{0%{opacity:0;-webkit-transform:scale(.1) translateY(-2000px);-ms-transform:scale(.1) translateY(-2000px);transform:scale(.1) translateY(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateY(60px);-ms-transform:scale(.475) translateY(60px);transform:scale(.475) translateY(60px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}.layer-anim-01{-webkit-animation-name:layer-zoomInDown;animation-name:layer-zoomInDown}@-webkit-keyframes layer-fadeInUpBig{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}100%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes layer-fadeInUpBig{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}100%{opacity:1;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.layer-anim-02{-webkit-animation-name:layer-fadeInUpBig;animation-name:layer-fadeInUpBig}@-webkit-keyframes layer-zoomInLeft{0%{opacity:0;-webkit-transform:scale(.1) translateX(-2000px);transform:scale(.1) translateX(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateX(48px);transform:scale(.475) translateX(48px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes layer-zoomInLeft{0%{opacity:0;-webkit-transform:scale(.1) translateX(-2000px);-ms-transform:scale(.1) translateX(-2000px);transform:scale(.1) translateX(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateX(48px);-ms-transform:scale(.475) translateX(48px);transform:scale(.475) translateX(48px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}.layer-anim-03{-webkit-animation-name:layer-zoomInLeft;animation-name:layer-zoomInLeft}@-webkit-keyframes layer-rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}100%{opacity:1;-webkit-transform:translateX(0) rotate(0);transform:translateX(0) rotate(0)}}@keyframes layer-rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}100%{opacity:1;-webkit-transform:translateX(0) rotate(0);-ms-transform:translateX(0) rotate(0);transform:translateX(0) rotate(0)}}.layer-anim-04{-webkit-animation-name:layer-rollIn;animation-name:layer-rollIn}@keyframes layer-fadeIn{0%{opacity:0}100%{opacity:1}}.layer-anim-05{-webkit-animation-name:layer-fadeIn;animation-name:layer-fadeIn}@-webkit-keyframes layer-shake{0%,100%{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes layer-shake{0%,100%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.layer-anim-06{-webkit-animation-name:layer-shake;animation-name:layer-shake}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.layui-layer-title{padding:0 80px 0 20px;height:50px;line-height:50px;border-bottom:1px solid #F0F0F0;font-size:14px;color:#333;overflow:hidden;border-radius:2px 2px 0 0}.layui-layer-setwin{position:absolute;right:15px;*right:0;top:17px;font-size:0;line-height:initial}.layui-layer-setwin a{position:relative;width:16px;height:16px;margin-left:10px;font-size:12px;_overflow:hidden}.layui-layer-setwin .layui-layer-min cite{position:absolute;width:14px;height:2px;left:0;top:50%;margin-top:-1px;background-color:#2E2D3C;cursor:pointer;_overflow:hidden}.layui-layer-setwin .layui-layer-min:hover cite{background-color:#2D93CA}.layui-layer-setwin .layui-layer-max{background-position:-32px -40px}.layui-layer-setwin .layui-layer-max:hover{background-position:-16px -40px}.layui-layer-setwin .layui-layer-maxmin{background-position:-65px -40px}.layui-layer-setwin .layui-layer-maxmin:hover{background-position:-49px -40px}.layui-layer-setwin .layui-layer-close1{background-position:1px -40px;cursor:pointer}.layui-layer-setwin .layui-layer-close1:hover{opacity:.7}.layui-layer-setwin .layui-layer-close2{position:absolute;right:-28px;top:-28px;width:30px;height:30px;margin-left:0;background-position:-149px -31px;*right:-18px;_display:none}.layui-layer-setwin .layui-layer-close2:hover{background-position:-180px -31px}.layui-layer-btn{text-align:right;padding:0 15px 12px;pointer-events:auto;user-select:none;-webkit-user-select:none}.layui-layer-btn a{height:28px;line-height:28px;margin:5px 5px 0;padding:0 15px;border:1px solid #dedede;background-color:#fff;color:#333;border-radius:2px;font-weight:400;cursor:pointer;text-decoration:none}.layui-layer-btn a:hover{opacity:.9;text-decoration:none}.layui-layer-btn a:active{opacity:.8}.layui-layer-btn .layui-layer-btn0{border-color:#1E9FFF;background-color:#1E9FFF;color:#fff}.layui-layer-btn-l{text-align:left}.layui-layer-btn-c{text-align:center}.layui-layer-dialog{min-width:300px}.layui-layer-dialog .layui-layer-content{position:relative;padding:20px;line-height:24px;word-break:break-all;overflow:hidden;font-size:14px;overflow-x:hidden;overflow-y:auto}.layui-layer-dialog .layui-layer-content .layui-layer-ico{position:absolute;top:16px;left:15px;_left:-40px;width:30px;height:30px}.layui-layer-ico1{background-position:-30px 0}.layui-layer-ico2{background-position:-60px 0}.layui-layer-ico3{background-position:-90px 0}.layui-layer-ico4{background-position:-120px 0}.layui-layer-ico5{background-position:-150px 0}.layui-layer-ico6{background-position:-180px 0}.layui-layer-rim{border:6px solid #8D8D8D;border:6px solid rgba(0,0,0,.3);border-radius:5px;box-shadow:none}.layui-layer-msg{min-width:180px;border:1px solid #D3D4D3;box-shadow:none}.layui-layer-hui{min-width:100px;background-color:#000;filter:alpha(opacity=60);background-color:rgba(0,0,0,.6);color:#fff;border:none}.layui-layer-hui .layui-layer-content{padding:12px 25px;text-align:center}.layui-layer-dialog .layui-layer-padding{padding:20px 20px 20px 55px;text-align:left}.layui-layer-page .layui-layer-content{position:relative;overflow:auto}.layui-layer-iframe .layui-layer-btn,.layui-layer-page .layui-layer-btn{padding-top:10px}.layui-layer-nobg{background:0 0}.layui-layer-iframe iframe{display:block;width:100%}.layui-layer-loading{border-radius:100%;background:0 0;box-shadow:none;border:none}.layui-layer-loading .layui-layer-content{width:60px;height:24px;background:url(loading-0.gif) no-repeat}.layui-layer-loading .layui-layer-loading1{width:37px;height:37px;background:url(loading-1.gif) no-repeat}.layui-layer-ico16,.layui-layer-loading .layui-layer-loading2{width:32px;height:32px;background:url(loading-2.gif) no-repeat}.layui-layer-tips{background:0 0;box-shadow:none;border:none}.layui-layer-tips .layui-layer-content{position:relative;line-height:22px;min-width:12px;padding:8px 15px;font-size:12px;_float:left;border-radius:2px;box-shadow:1px 1px 3px rgba(0,0,0,.2);background-color:#000;color:#fff}.layui-layer-tips .layui-layer-close{right:-2px;top:-1px}.layui-layer-tips i.layui-layer-TipsG{position:absolute;width:0;height:0;border-width:8px;border-color:transparent;border-style:dashed;*overflow:hidden}.layui-layer-tips i.layui-layer-TipsB,.layui-layer-tips i.layui-layer-TipsT{left:5px;border-right-style:solid;border-right-color:#000}.layui-layer-tips i.layui-layer-TipsT{bottom:-8px}.layui-layer-tips i.layui-layer-TipsB{top:-8px}.layui-layer-tips i.layui-layer-TipsL,.layui-layer-tips i.layui-layer-TipsR{top:5px;border-bottom-style:solid;border-bottom-color:#000}.layui-layer-tips i.layui-layer-TipsR{left:-8px}.layui-layer-tips i.layui-layer-TipsL{right:-8px}.layui-layer-lan[type=dialog]{min-width:280px}.layui-layer-lan .layui-layer-title{background:#4476A7;color:#fff;border:none}.layui-layer-lan .layui-layer-btn{padding:5px 10px 10px;text-align:right;border-top:1px solid #E9E7E7}.layui-layer-lan .layui-layer-btn a{background:#fff;border-color:#E9E7E7;color:#333}.layui-layer-lan .layui-layer-btn .layui-layer-btn1{background:#C9C5C5}.layui-layer-molv .layui-layer-title{background:#009f95;color:#fff;border:none}.layui-layer-molv .layui-layer-btn a{background:#009f95;border-color:#009f95}.layui-layer-molv .layui-layer-btn .layui-layer-btn1{background:#92B8B1}.layui-layer-iconext{background:url(icon-ext.png) no-repeat}.layui-layer-prompt .layui-layer-input{display:block;width:260px;height:36px;margin:0 auto;line-height:30px;padding-left:10px;border:1px solid #e6e6e6;color:#333}.layui-layer-prompt textarea.layui-layer-input{width:300px;height:100px;line-height:20px;padding:6px 10px}.layui-layer-prompt .layui-layer-content{padding:20px}.layui-layer-prompt .layui-layer-btn{padding-top:0}.layui-layer-tab{box-shadow:1px 1px 50px rgba(0,0,0,.4)}.layui-layer-tab .layui-layer-title{padding-left:0;overflow:visible}.layui-layer-tab .layui-layer-title span{position:relative;float:left;min-width:80px;max-width:300px;padding:0 20px;text-align:center;overflow:hidden;cursor:pointer}.layui-layer-tab .layui-layer-title span.layui-this{height:51px;border-left:1px solid #eee;border-right:1px solid #eee;background-color:#fff;z-index:10}.layui-layer-tab .layui-layer-title span:first-child{border-left:none}.layui-layer-tabmain{line-height:24px;clear:both}.layui-layer-tabmain .layui-layer-tabli{display:none}.layui-layer-tabmain .layui-layer-tabli.layui-this{display:block}.layui-layer-photos{background:0 0;box-shadow:none}.layui-layer-photos .layui-layer-content{overflow:hidden;text-align:center}.layui-layer-photos .layui-layer-phimg img{position:relative;width:100%;display:inline-block;*display:inline;*zoom:1;vertical-align:top}.layui-layer-imgnext,.layui-layer-imgprev{position:fixed;top:50%;width:27px;_width:44px;height:44px;margin-top:-22px;outline:0;blr:expression(this.onFocus=this.blur())}.layui-layer-imgprev{left:30px;background-position:-5px -5px;_background-position:-70px -5px}.layui-layer-imgprev:hover{background-position:-33px -5px;_background-position:-120px -5px}.layui-layer-imgnext{right:30px;_right:8px;background-position:-5px -50px;_background-position:-70px -50px}.layui-layer-imgnext:hover{background-position:-33px -50px;_background-position:-120px -50px}.layui-layer-imgbar{position:fixed;left:0;right:0;bottom:0;width:100%;height:40px;line-height:40px;background-color:#000\\9;filter:Alpha(opacity=60);background-color:rgba(2,0,0,.35);color:#fff;overflow:hidden;font-size:0}.layui-layer-imgtit *{display:inline-block;*display:inline;*zoom:1;vertical-align:top;font-size:12px}.layui-layer-imgtit a{max-width:65%;overflow:hidden;color:#fff}.layui-layer-imgtit a:hover{color:#fff;text-decoration:underline}.layui-layer-imgtit em{padding-left:10px;font-style:normal}@-webkit-keyframes layer-bounceOut{100%{opacity:0;-webkit-transform:scale(.7);transform:scale(.7)}30%{-webkit-transform:scale(1.05);transform:scale(1.05)}0%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes layer-bounceOut{100%{opacity:0;-webkit-transform:scale(.7);-ms-transform:scale(.7);transform:scale(.7)}30%{-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.layer-anim-close{-webkit-animation-name:layer-bounceOut;animation-name:layer-bounceOut;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:.2s;animation-duration:.2s}@media screen and (max-width:1100px){.layui-layer-iframe{overflow-y:auto;-webkit-overflow-scrolling:touch}}","link":"/AboutMe/static/layer-v3.5.1/layer/theme/default/layer.css"},{"title":"","text":".layui-m-layer{position:relative;z-index:19891014}.layui-m-layer *{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}.layui-m-layermain,.layui-m-layershade{position:fixed;left:0;top:0;width:100%;height:100%}.layui-m-layershade{background-color:rgba(0,0,0,.7);pointer-events:auto}.layui-m-layermain{display:table;font-family:Helvetica,arial,sans-serif;pointer-events:none}.layui-m-layermain .layui-m-layersection{display:table-cell;vertical-align:middle;text-align:center}.layui-m-layerchild{position:relative;display:inline-block;text-align:left;background-color:#fff;font-size:14px;border-radius:5px;box-shadow:0 0 8px rgba(0,0,0,.1);pointer-events:auto;-webkit-overflow-scrolling:touch;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:.2s;animation-duration:.2s}@-webkit-keyframes layui-m-anim-scale{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes layui-m-anim-scale{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.layui-m-anim-scale{animation-name:layui-m-anim-scale;-webkit-animation-name:layui-m-anim-scale}@-webkit-keyframes layui-m-anim-up{0%{opacity:0;-webkit-transform:translateY(800px);transform:translateY(800px)}100%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes layui-m-anim-up{0%{opacity:0;-webkit-transform:translateY(800px);transform:translateY(800px)}100%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}.layui-m-anim-up{-webkit-animation-name:layui-m-anim-up;animation-name:layui-m-anim-up}.layui-m-layer0 .layui-m-layerchild{width:90%;max-width:640px}.layui-m-layer1 .layui-m-layerchild{border:none;border-radius:0}.layui-m-layer2 .layui-m-layerchild{width:auto;max-width:260px;min-width:40px;border:none;background:0 0;box-shadow:none;color:#fff}.layui-m-layerchild h3{padding:0 10px;height:60px;line-height:60px;font-size:16px;font-weight:400;border-radius:5px 5px 0 0;text-align:center}.layui-m-layerbtn span,.layui-m-layerchild h3{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.layui-m-layercont{padding:50px 30px;line-height:22px;text-align:center}.layui-m-layer1 .layui-m-layercont{padding:0;text-align:left}.layui-m-layer2 .layui-m-layercont{text-align:center;padding:0;line-height:0}.layui-m-layer2 .layui-m-layercont i{width:25px;height:25px;margin-left:8px;display:inline-block;background-color:#fff;border-radius:100%;-webkit-animation:layui-m-anim-loading 1.4s infinite ease-in-out;animation:layui-m-anim-loading 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}.layui-m-layerbtn,.layui-m-layerbtn span{position:relative;text-align:center;border-radius:0 0 5px 5px}.layui-m-layer2 .layui-m-layercont p{margin-top:20px}@-webkit-keyframes layui-m-anim-loading{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}@keyframes layui-m-anim-loading{0%,100%,80%{transform:scale(0);-webkit-transform:scale(0)}40%{transform:scale(1);-webkit-transform:scale(1)}}.layui-m-layer2 .layui-m-layercont i:first-child{margin-left:0;-webkit-animation-delay:-.32s;animation-delay:-.32s}.layui-m-layer2 .layui-m-layercont i.layui-m-layerload{-webkit-animation-delay:-.16s;animation-delay:-.16s}.layui-m-layer2 .layui-m-layercont>div{line-height:22px;padding-top:7px;margin-bottom:20px;font-size:14px}.layui-m-layerbtn{display:box;display:-moz-box;display:-webkit-box;width:100%;height:50px;line-height:50px;font-size:0;border-top:1px solid #D0D0D0;background-color:#F2F2F2}.layui-m-layerbtn span{display:block;-moz-box-flex:1;box-flex:1;-webkit-box-flex:1;font-size:14px;cursor:pointer}.layui-m-layerbtn span[yes]{color:#40AFFE}.layui-m-layerbtn span[no]{border-right:1px solid #D0D0D0;border-radius:0 0 0 5px}.layui-m-layerbtn span:active{background-color:#F6F6F6}.layui-m-layerend{position:absolute;right:7px;top:10px;width:30px;height:30px;border:0;font-weight:400;background:0 0;cursor:pointer;-webkit-appearance:none;font-size:30px}.layui-m-layerend::after,.layui-m-layerend::before{position:absolute;left:5px;top:15px;content:'';width:18px;height:1px;background-color:#999;transform:rotate(45deg);-webkit-transform:rotate(45deg);border-radius:3px}.layui-m-layerend::after{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}body .layui-m-layer .layui-m-layer-footer{position:fixed;width:95%;max-width:100%;margin:0 auto;left:0;right:0;bottom:10px;background:0 0}.layui-m-layer-footer .layui-m-layercont{padding:20px;border-radius:5px 5px 0 0;background-color:rgba(255,255,255,.8)}.layui-m-layer-footer .layui-m-layerbtn{display:block;height:auto;background:0 0;border-top:none}.layui-m-layer-footer .layui-m-layerbtn span{background-color:rgba(255,255,255,.8)}.layui-m-layer-footer .layui-m-layerbtn span[no]{color:#FD482C;border-top:1px solid #c2c2c2;border-radius:0 0 5px 5px}.layui-m-layer-footer .layui-m-layerbtn span[yes]{margin-top:10px;border-radius:5px}body .layui-m-layer .layui-m-layer-msg{width:auto;max-width:90%;margin:0 auto;bottom:-150px;background-color:rgba(0,0,0,.7);color:#fff}.layui-m-layer-msg .layui-m-layercont{padding:10px 20px}","link":"/AboutMe/static/layer-v3.5.1/layer/mobile/need/layer.css"},{"title":"","text":"body .layer-ext-kzhomepage .layui-layer-title{ color: transparent; border: 0px; display: none; } body .layui-ext-kzhomepage .layui-layer-btn{} body .layui-ext-kzhomepage .layui-layer-btn a{} .layer-ext-kzhomepage{ background-color: transparent; box-shadow: none; border: none; } /* .layui-layer-setwin{ right: -50px; width: 50px; background: transparent; color: #fff; } .layui-layer-setwin .layui-layer-close{ background-color: #00000080; width: 30px; height: 30px; } .layui-layer-setwin .layui-layer-min cite{ background-color: #fff; width: 15px; left: 17.5px; height: 2px; } */","link":"/AboutMe/static/layer-v3.5.1/layer/theme/kzhomepage/style.css"},{"title":"","text":"\"use strict\";function _objectSpread(a){for(var b=1;bb.toUpperCase())}_init(){let a={};for(let b=0;b","link":"/AboutMe/static/Meting.min.js"},{"title":"","text":"var windowWidth = $(window).width(); layer.config({ extend: 'kzhomepage/style.css', //加载扩展样式 skin: 'layer-ext-kzhomepage' }); // Nav buttons $('.kz-nav-btn').on('click', function() { let btn = $(this); let type = btn.data('window') // pop current newtab let content = btn.data('href') switch (type) { case 'pop': let title = btn.data('title') let shadeClose = btn.data('shade') === 'true' ? false : true let anim = btn.data('anim') ? btn.data('anim')*1 : 4 let area_w = btn.data('area-w') ? btn.data('area-w') : '80%' let area_h = btn.data('area-h') ? btn.data('area-h') : '90%' layer.open({ type: 2, title: title, shadeClose: shadeClose, anim:anim, closeBtn: 2, isOutAnim: false, area: [area_w, area_h], content: content }); break; case 'current': window.location = content break; case 'newtab': window.open('_blank').location = content break; } }); console.log( \"\\n\" + \" %c KZHomePage v1.2.0 by kaygb \" + \" %c https://blog.170601.xyz/archives/25.html \" + \"\\n\" + \"\\n\", \"color: #fff; background: #fd79a8; padding:5px 0;\", \"background: #FFF; padding:5px 0;\" ); // 兼容旧版 if(meting_music_api===\"\"){ meting_api = \"https://api.mizore.cn/meting/api.php\"; } var meting_api = \"https://api.mizore.cn/meting/api.php?server=:server&type=:type&id=:id\"; $.ajax({ // url: \"https://api.mizore.cn/meting/api.php?server=netease&type=playlist&id=20173709\", url: meting_music_api, data:{ server: music_server, type: music_type, id: music_id }, dataType: \"json\", success: function (audio) { const ap = new APlayer({ container: music_fixed === false ? document.getElementById('aplayer-inner') : document.getElementById('aplayer-fixed') , audio: audio, fixed: music_fixed === false ? false : true, autoplay: music_autoplay, order: music_order, listFolded :true, volum: music_volume, mini: music_fixed === true ? true:music_mini, lrcType: 3, preload:\"auto\", loop: music_loop }); }, }); fetch('https://v1.hitokoto.cn') .then(response => response.json()) .then(data => { const hitokoto = document.getElementById('hitokoto_text') hitokoto.href = 'https://hitokoto.cn/?uuid=' + data.uuid hitokoto.innerText = data.hitokoto }) .catch(console.error)","link":"/AboutMe/static/main.js"},{"title":"","text":"/*! layer-v3.1.1 Web弹层组件 MIT License http://layer.layui.com/ By 贤心 */ ;!function(e,t){\"use strict\";var i,n,a=e.layui&&layui.define,o={getPath:function(){var e=document.currentScript?document.currentScript.src:function(){for(var e,t=document.scripts,i=t.length-1,n=i;n>0;n--)if(\"interactive\"===t[n].readyState){e=t[n].src;break}return e||t[i].src}();return e.substring(0,e.lastIndexOf(\"/\")+1)}(),config:{},end:{},minIndex:0,minLeft:[],btn:[\"确定\",\"取消\"],type:[\"dialog\",\"page\",\"iframe\",\"loading\",\"tips\"],getStyle:function(t,i){var n=t.currentStyle?t.currentStyle:e.getComputedStyle(t,null);return n[n.getPropertyValue?\"getPropertyValue\":\"getAttribute\"](i)},link:function(t,i,n){if(r.path){var a=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"link\");\"string\"==typeof i&&(n=i);var l=(n||t).replace(/\\.|\\//g,\"\"),f=\"layuicss-\"+l,c=0;s.rel=\"stylesheet\",s.href=r.path+t,s.id=f,document.getElementById(f)||a.appendChild(s),\"function\"==typeof i&&!function u(){return++c>80?e.console&&console.error(\"layer.css: Invalid\"):void(1989===parseInt(o.getStyle(document.getElementById(f),\"width\"))?i():setTimeout(u,100))}()}}},r={v:\"3.1.1\",ie:function(){var t=navigator.userAgent.toLowerCase();return!!(e.ActiveXObject||\"ActiveXObject\"in e)&&((t.match(/msie\\s(\\d+)/)||[])[1]||\"11\")}(),index:e.layer&&e.layer.v?1e5:0,path:o.getPath,config:function(e,t){return e=e||{},r.cache=o.config=i.extend({},o.config,e),r.path=o.config.path||r.path,\"string\"==typeof e.extend&&(e.extend=[e.extend]),o.config.path&&r.ready(),e.extend?(a?layui.addcss(\"modules/layer/\"+e.extend):o.link(\"theme/\"+e.extend),this):this},ready:function(e){var t=\"layer\",i=\"\",n=(a?\"modules/layer/\":\"theme/\")+\"default/layer.css?v=\"+r.v+i;return a?layui.addcss(n,e,t):o.link(n,e,t),this},alert:function(e,t,n){var a=\"function\"==typeof t;return a&&(n=t),r.open(i.extend({content:e,yes:n},a?{}:t))},confirm:function(e,t,n,a){var s=\"function\"==typeof t;return s&&(a=n,n=t),r.open(i.extend({content:e,btn:o.btn,yes:n,btn2:a},s?{}:t))},msg:function(e,n,a){var s=\"function\"==typeof n,f=o.config.skin,c=(f?f+\" \"+f+\"-msg\":\"\")||\"layui-layer-msg\",u=l.anim.length-1;return s&&(a=n),r.open(i.extend({content:e,time:3e3,shade:!1,skin:c,title:!1,closeBtn:!1,btn:!1,resize:!1,end:a},s&&!o.config.skin?{skin:c+\" layui-layer-hui\",anim:u}:function(){return n=n||{},(n.icon===-1||n.icon===t&&!o.config.skin)&&(n.skin=c+\" \"+(n.skin||\"layui-layer-hui\")),n}()))},load:function(e,t){return r.open(i.extend({type:3,icon:e||0,resize:!1,shade:.01},t))},tips:function(e,t,n){return r.open(i.extend({type:4,content:[e,t],closeBtn:!1,time:3e3,shade:!1,resize:!1,fixed:!1,maxWidth:210},n))}},s=function(e){var t=this;t.index=++r.index,t.config=i.extend({},t.config,o.config,e),document.body?t.creat():setTimeout(function(){t.creat()},30)};s.pt=s.prototype;var l=[\"layui-layer\",\".layui-layer-title\",\".layui-layer-main\",\".layui-layer-dialog\",\"layui-layer-iframe\",\"layui-layer-content\",\"layui-layer-btn\",\"layui-layer-close\"];l.anim=[\"layer-anim-00\",\"layer-anim-01\",\"layer-anim-02\",\"layer-anim-03\",\"layer-anim-04\",\"layer-anim-05\",\"layer-anim-06\"],s.pt.config={type:0,shade:.3,fixed:!0,move:l[1],title:\"信息\",offset:\"auto\",area:\"auto\",closeBtn:1,time:0,zIndex:19891014,maxWidth:360,anim:0,isOutAnim:!0,icon:-1,moveType:1,resize:!0,scrollbar:!0,tips:2},s.pt.vessel=function(e,t){var n=this,a=n.index,r=n.config,s=r.zIndex+a,f=\"object\"==typeof r.title,c=r.maxmin&&(1===r.type||2===r.type),u=r.title?''+(f?r.title[0]:r.title)+\"\":\"\";return r.zIndex=s,t([r.shade?'':\"\",''+(e&&2!=r.type?\"\":u)+''+(0==r.type&&r.icon!==-1?'':\"\")+(1==r.type&&e?\"\":r.content||\"\")+''+function(){var e=c?'':\"\";return r.closeBtn&&(e+=''),e}()+\"\"+(r.btn?function(){var e=\"\";\"string\"==typeof r.btn&&(r.btn=[r.btn]);for(var t=0,i=r.btn.length;t0&&o.outerHeight()>a.maxHeight?(s[1]=a.maxHeight,u(\".\"+l[5])):a.fixed&&s[1]>=n.height()&&(s[1]=n.height(),u(\".\"+l[5])):u(\".\"+l[5])}return t},s.pt.offset=function(){var e=this,t=e.config,i=e.layero,a=[i.outerWidth(),i.outerHeight()],o=\"object\"==typeof t.offset;e.offsetTop=(n.height()-a[1])/2,e.offsetLeft=(n.width()-a[0])/2,o?(e.offsetTop=t.offset[0],e.offsetLeft=t.offset[1]||e.offsetLeft):\"auto\"!==t.offset&&(\"t\"===t.offset?e.offsetTop=0:\"r\"===t.offset?e.offsetLeft=n.width()-a[0]:\"b\"===t.offset?e.offsetTop=n.height()-a[1]:\"l\"===t.offset?e.offsetLeft=0:\"lt\"===t.offset?(e.offsetTop=0,e.offsetLeft=0):\"lb\"===t.offset?(e.offsetTop=n.height()-a[1],e.offsetLeft=0):\"rt\"===t.offset?(e.offsetTop=0,e.offsetLeft=n.width()-a[0]):\"rb\"===t.offset?(e.offsetTop=n.height()-a[1],e.offsetLeft=n.width()-a[0]):e.offsetTop=t.offset),t.fixed||(e.offsetTop=/%$/.test(e.offsetTop)?n.height()*parseFloat(e.offsetTop)/100:parseFloat(e.offsetTop),e.offsetLeft=/%$/.test(e.offsetLeft)?n.width()*parseFloat(e.offsetLeft)/100:parseFloat(e.offsetLeft),e.offsetTop+=n.scrollTop(),e.offsetLeft+=n.scrollLeft()),i.attr(\"minLeft\")&&(e.offsetTop=n.height()-(i.find(l[1]).outerHeight()||0),e.offsetLeft=i.css(\"left\")),i.css({top:e.offsetTop,left:e.offsetLeft})},s.pt.tips=function(){var e=this,t=e.config,a=e.layero,o=[a.outerWidth(),a.outerHeight()],r=i(t.follow);r[0]||(r=i(\"body\"));var s={width:r.outerWidth(),height:r.outerHeight(),top:r.offset().top,left:r.offset().left},f=a.find(\".layui-layer-TipsG\"),c=t.tips[0];t.tips[1]||f.remove(),s.autoLeft=function(){s.left+o[0]-n.width()>0?(s.tipLeft=s.left+s.width-o[0],f.css({right:12,left:\"auto\"})):s.tipLeft=s.left},s.where=[function(){s.autoLeft(),s.tipTop=s.top-o[1]-10,f.removeClass(\"layui-layer-TipsB\").addClass(\"layui-layer-TipsT\").css(\"border-right-color\",t.tips[1])},function(){s.tipLeft=s.left+s.width+10,s.tipTop=s.top,f.removeClass(\"layui-layer-TipsL\").addClass(\"layui-layer-TipsR\").css(\"border-bottom-color\",t.tips[1])},function(){s.autoLeft(),s.tipTop=s.top+s.height+10,f.removeClass(\"layui-layer-TipsT\").addClass(\"layui-layer-TipsB\").css(\"border-right-color\",t.tips[1])},function(){s.tipLeft=s.left-o[0]-10,s.tipTop=s.top,f.removeClass(\"layui-layer-TipsR\").addClass(\"layui-layer-TipsL\").css(\"border-bottom-color\",t.tips[1])}],s.where[c-1](),1===c?s.top-(n.scrollTop()+o[1]+16)0||s.where[3]():3===c?s.top-n.scrollTop()+s.height+o[1]+16-n.height()>0&&s.where[0]():4===c&&o[0]+16-s.left>0&&s.where[1](),a.find(\".\"+l[5]).css({\"background-color\":t.tips[1],\"padding-right\":t.closeBtn?\"30px\":\"\"}),a.css({left:s.tipLeft-(t.fixed?n.scrollLeft():0),top:s.tipTop-(t.fixed?n.scrollTop():0)})},s.pt.move=function(){var e=this,t=e.config,a=i(document),s=e.layero,l=s.find(t.move),f=s.find(\".layui-layer-resize\"),c={};return t.move&&l.css(\"cursor\",\"move\"),l.on(\"mousedown\",function(e){e.preventDefault(),t.move&&(c.moveStart=!0,c.offset=[e.clientX-parseFloat(s.css(\"left\")),e.clientY-parseFloat(s.css(\"top\"))],o.moveElem.css(\"cursor\",\"move\").show())}),f.on(\"mousedown\",function(e){e.preventDefault(),c.resizeStart=!0,c.offset=[e.clientX,e.clientY],c.area=[s.outerWidth(),s.outerHeight()],o.moveElem.css(\"cursor\",\"se-resize\").show()}),a.on(\"mousemove\",function(i){if(c.moveStart){var a=i.clientX-c.offset[0],o=i.clientY-c.offset[1],l=\"fixed\"===s.css(\"position\");if(i.preventDefault(),c.stX=l?0:n.scrollLeft(),c.stY=l?0:n.scrollTop(),!t.moveOut){var f=n.width()-s.outerWidth()+c.stX,u=n.height()-s.outerHeight()+c.stY;af&&(a=f),ou&&(o=u)}s.css({left:a,top:o})}if(t.resize&&c.resizeStart){var a=i.clientX-c.offset[0],o=i.clientY-c.offset[1];i.preventDefault(),r.style(e.index,{width:c.area[0]+a,height:c.area[1]+o}),c.isResize=!0,t.resizing&&t.resizing(s)}}).on(\"mouseup\",function(e){c.moveStart&&(delete c.moveStart,o.moveElem.hide(),t.moveEnd&&t.moveEnd(s)),c.resizeStart&&(delete c.resizeStart,o.moveElem.hide())}),e},s.pt.callback=function(){function e(){var e=a.cancel&&a.cancel(t.index,n);e===!1||r.close(t.index)}var t=this,n=t.layero,a=t.config;t.openLayer(),a.success&&(2==a.type?n.find(\"iframe\").on(\"load\",function(){a.success(n,t.index)}):a.success(n,t.index)),6==r.ie&&t.IE6(n),n.find(\".\"+l[6]).children(\"a\").on(\"click\",function(){var e=i(this).index();if(0===e)a.yes?a.yes(t.index,n):a.btn1?a.btn1(t.index,n):r.close(t.index);else{var o=a[\"btn\"+(e+1)]&&a[\"btn\"+(e+1)](t.index,n);o===!1||r.close(t.index)}}),n.find(\".\"+l[7]).on(\"click\",e),a.shadeClose&&i(\"#layui-layer-shade\"+t.index).on(\"click\",function(){r.close(t.index)}),n.find(\".layui-layer-min\").on(\"click\",function(){var e=a.min&&a.min(n);e===!1||r.min(t.index,a)}),n.find(\".layui-layer-max\").on(\"click\",function(){i(this).hasClass(\"layui-layer-maxmin\")?(r.restore(t.index),a.restore&&a.restore(n)):(r.full(t.index,a),setTimeout(function(){a.full&&a.full(n)},100))}),a.end&&(o.end[t.index]=a.end)},o.reselect=function(){i.each(i(\"select\"),function(e,t){var n=i(this);n.parents(\".\"+l[0])[0]||1==n.attr(\"layer\")&&i(\".\"+l[0]).length","link":"/AboutMe/static/layer.js"},{"title":"","text":"body { font-size: 18px; color: #6c767d; background-color: #ebf1f5; background-image: url(\"https://bu.dusays.com/2022/06/04/629b0a2a89425.png\"); background-attachment: fixed; background-repeat: no-repeat; background-size: cover; height: 100vh; min-height: 800px; } /*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/ ::-webkit-scrollbar { width: 5px; /* height: 5px; */ background-color: #F5F5F5; } /*定义滚动条轨道 内阴影+圆角*/ ::-webkit-scrollbar-track { -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3); border-radius: 10px; background-color: #F5F5F5; } /*定义滑块 内阴影+圆角*/ ::-webkit-scrollbar-thumb { border-radius: 10px; -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3); background-color: #555; } #main .aplayer{ margin: 10px 0!important; } h1 { font-size: 36px; margin-bottom: .5em; } h2 { font-size: 24px; } h3 { font-size: 20px; margin-top: 1em; } h4 { font-size: 16px; } h1, h2, h3, h4 { color: black; } .card { border: none; padding: 50px 30px 0px; border-radius: 9px; backdrop-filter: blur(20px); background-color: #fff8e80f; } .container { position: relative; top: 50%; transform: translateY(-50%); } .my-card { /* box-shadow: 0px 5px 15px 5px rgb(203, 221, 232); */ } strike { color: red; } .btn { border-radius: 0; margin: 5px 0; width: 100%; padding: 12px 40px; transition: ease; } .btn-primary { /* box-shadow: 0px 5px 15px 5px rgb(203, 221, 232); */ padding: 12px 40px; transition: ease; } .btn-primary:hover { box-shadow: 5px -2px 15px 0px rgb(203, 221, 232); } .btn-secondary { /* box-shadow: 0px 5px 15px 5px rgb(203, 221, 232); */ padding: 12px 40px; transition: ease; } .btn-secondary:hover { box-shadow: 5px -2px 15px 0px rgb(203, 221, 232); } .btn-success { /* box-shadow: 0px 5px 15px 5px rgb(203, 221, 232); */ padding: 12px 40px; transition: ease; } .btn-success:hover { box-shadow: 5px -2px 15px 0px rgb(203, 221, 232); } .social { padding-left: 0; } .social p { margin-bottom: 0; } .social li { list-style: none; float: left; margin-right: 15px; } .card-text { margin-bottom: 20px; } .social .fa { font-size: 24px; } .photo-bg { /* background-image: url(assets/background.jpg); */ background-image: url(https://tva1.sinaimg.cn/large/0072Vf1pgy1foxk456b0fj31hc0u0dxu.jpg); background-position: center; background-repeat: no-repeat; background-size: cover; } footer p { font-size: 12px; } #kaygb-blog-a, #kaygb-mail-a { display: none; } @media (max-width: 1199px) { body { min-height: 600px; } h1 { font-size: 24px; } h2, .social .fa { font-size: 20px; } h3 { font-size: 16px; } h4, p { font-size: 14px; } .card { padding: 50px 50px 0px; } } @media (max-width: 1199px) { .photo-bg { min-height: calc(100vh - 500px); } } @media(max-width:991px) { .photo-bg { background-position: top; min-height: calc(90vh - 440px); } } @media(max-width: 767px) { .container { position: relative; top: 0; transform: translateY(0); } .photo-bg { height: 180px; } .card { padding: 20px; } #kaygb-blog-a, #kaygb-mail-a { display: block; } #kaygb-blog, #kaygb-mail { display: none; } } #frame { width: 50%; height: 50vh; margin: 0; background: #fff; position: fixed; z-index: 999; top: 5%; left: 5%; } #aplayer { z-index: 20000000; }","link":"/AboutMe/static/style.css"}]}